{"version":3,"file":"static/js/781.0cfc8930.chunk.js","mappings":"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","sources":["../node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["import * as React from 'react';\n\nfunction ratio({ width, height }) {\n    return width / height;\n}\n\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\n\nfunction rankingFunctionComparator(rank) {\n    return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n    constructor(comparator) {\n        this.comparator = comparator;\n        this.heap = [];\n        this.n = 0;\n    }\n    greater(i, j) {\n        return this.comparator(this.heap[i], this.heap[j]) < 0;\n    }\n    swap(i, j) {\n        const temp = this.heap[i];\n        this.heap[i] = this.heap[j];\n        this.heap[j] = temp;\n    }\n    swim(i) {\n        let k = i;\n        let k2 = Math.floor(k / 2);\n        while (k > 1 && this.greater(k2, k)) {\n            this.swap(k2, k);\n            k = k2;\n            k2 = Math.floor(k / 2);\n        }\n    }\n    sink(i) {\n        let k = i;\n        let k2 = k * 2;\n        while (k2 <= this.n) {\n            if (k2 < this.n && this.greater(k2, k2 + 1))\n                k2 += 1;\n            if (!this.greater(k, k2))\n                break;\n            this.swap(k, k2);\n            k = k2;\n            k2 = k * 2;\n        }\n    }\n    push(element) {\n        this.n += 1;\n        this.heap[this.n] = element;\n        this.swim(this.n);\n    }\n    pop() {\n        if (this.n === 0)\n            return undefined;\n        this.swap(1, this.n);\n        this.n -= 1;\n        const max = this.heap.pop();\n        this.sink(1);\n        return max;\n    }\n    size() {\n        return this.n;\n    }\n}\n\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n    const precedentsMap = new Map();\n    const visited = new Set();\n    const storedShortestPaths = new Map();\n    storedShortestPaths.set(startNode, 0);\n    const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n    queue.push({ id: startNode, weight: 0 });\n    while (queue.size() > 0) {\n        const { id, weight } = queue.pop();\n        if (!visited.has(id)) {\n            const neighboringNodes = graph(id);\n            visited.add(id);\n            neighboringNodes.forEach((neighborWeight, neighbor) => {\n                const newWeight = weight + neighborWeight;\n                const currentId = precedentsMap.get(neighbor);\n                const currentWeight = storedShortestPaths.get(neighbor);\n                if (currentWeight === undefined ||\n                    (currentWeight > newWeight &&\n                        (currentWeight / newWeight > 1.005 || (currentId !== undefined && currentId < id)))) {\n                    storedShortestPaths.set(neighbor, newWeight);\n                    queue.push({ id: neighbor, weight: newWeight });\n                    precedentsMap.set(neighbor, id);\n                }\n            });\n        }\n    }\n    return storedShortestPaths.has(endNode) ? precedentsMap : undefined;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n    const nodes = [];\n    for (let node = endNode; node !== undefined; node = precedentsMap.get(node)) {\n        nodes.push(node);\n    }\n    return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n    return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n}\n\nfunction findIdealNodeSearch({ photos, targetRowHeight, containerWidth, }) {\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n    return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n    const row = photos.slice(i, j);\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n}\nfunction makeGetRowNeighbors({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, }) {\n    return (node) => {\n        var _a, _b;\n        const { containerWidth, spacing, padding } = layoutOptions;\n        const results = new Map();\n        results.set(node, 0);\n        const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n        const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n        for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n            if (i - node > endOffset)\n                break;\n            const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n            if (currentCost === undefined)\n                break;\n            results.set(i, currentCost);\n        }\n        return results;\n    };\n}\nfunction computeRowsLayout({ photos, layoutOptions, }) {\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n    const getNeighbors = makeGetRowNeighbors({\n        photos,\n        layoutOptions,\n        targetRowHeight,\n        limitNodeSearch,\n        rowConstraints,\n    });\n    const path = findShortestPath(getNeighbors, 0, photos.length);\n    if (path === undefined)\n        return undefined;\n    const layout = [];\n    for (let i = 1; i < path.length; i += 1) {\n        const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\n        layout.push(row.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                height,\n                width: height * ratio(photo),\n                index,\n                photoIndex,\n                photosCount: row.length,\n            },\n        })));\n    }\n    return layout;\n}\n\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n    return layoutOptions.layout !== \"rows\"\n        ? `calc(100% - ${2 * layoutOptions.padding}px)`\n        : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n    var _a, _b;\n    return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n    let srcSet;\n    let sizes;\n    if (photo.images && photo.images.length > 0) {\n        srcSet = photo.images\n            .concat(!photo.images.find(({ width }) => width === photo.width)\n            ? [{ src: photo.src, width: photo.width, height: photo.height }]\n            : [])\n            .sort((first, second) => first.width - second.width)\n            .map((image) => `${image.src} ${image.width}w`)\n            .join(\", \");\n        if (layoutOptions.sizes) {\n            sizes = (layoutOptions.sizes.sizes || [])\n                .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\n                .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\n                .join(\", \");\n        }\n        else {\n            sizes = `${Math.ceil((layout.width / layoutOptions.containerWidth) * 100)}vw`;\n        }\n    }\n    return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n    var _a, _b;\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\n    const { onClick } = layoutOptions;\n    const imageStyle = {\n        display: \"block\",\n        boxSizing: \"content-box\",\n        width: cssPhotoWidth(layout, layoutOptions),\n        height: \"auto\",\n        aspectRatio: `${photo.width} / ${photo.height}`,\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\n            layout.photoIndex < layout.photosCount - 1\n            ? { marginBottom: `${layoutOptions.spacing}px` }\n            : null),\n        ...(onClick ? { cursor: \"pointer\" } : null),\n        ...style,\n    };\n    const handleClick = onClick\n        ? (event) => {\n            onClick({ event, photo, index: layout.index });\n        }\n        : undefined;\n    const imageProps = {\n        src: photo.src,\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n        title: photo.title,\n        onClick: handleClick,\n        style: imageStyle,\n        className: \"react-photo-album--photo\",\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...srcSetAndSizes(photo, layout, layoutOptions),\n        ...restImageProps,\n    };\n    const renderDefaultPhoto = (options) => {\n        const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n        return (React.createElement(\"img\", { alt: alt, ...(srcSet ? { srcSet, sizes } : null), src: src, style: (options === null || options === void 0 ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle, ...rest }));\n    };\n    const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n        display,\n        boxSizing,\n        width,\n        aspectRatio,\n        padding,\n        marginBottom,\n        cursor,\n    }))(imageStyle);\n    return (React.createElement(React.Fragment, null, (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n        photo,\n        layout,\n        layoutOptions,\n        imageProps,\n        renderDefaultPhoto,\n        wrapperStyle,\n    })) !== null && _b !== void 0 ? _b : renderDefaultPhoto()));\n}\n\nfunction defaultRenderRowContainer({ rowContainerProps, children, }) {\n    return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\n    const rowContainerProps = {\n        className: \"react-photo-album--row\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\n            ...style,\n        },\n        ...restRowContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n        layoutOptions,\n        rowIndex,\n        rowsCount,\n        rowContainerProps,\n        children,\n    })));\n}\n\nfunction RowsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps } = props;\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n    if (!rowsLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => (React.createElement(RowContainerRenderer, { key: `row-${rowIndex}`, layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps }, row.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n    const matrix = new Map();\n    const queue = new Set();\n    queue.add(startNode);\n    for (let length = 0; length < pathLength; length += 1) {\n        const currentQueue = [...queue.keys()];\n        queue.clear();\n        currentQueue.forEach((node) => {\n            const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n            graph(node).forEach(({ neighbor, weight }) => {\n                let paths = matrix.get(neighbor);\n                if (!paths) {\n                    paths = [];\n                    matrix.set(neighbor, paths);\n                }\n                const newWeight = accumulatedWeight + weight;\n                const nextPath = paths[length + 1];\n                if (!nextPath ||\n                    (nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node))) {\n                    paths[length + 1] = { node, weight: newWeight };\n                }\n                if (length < pathLength - 1 && neighbor !== endNode) {\n                    queue.add(neighbor);\n                }\n            });\n        });\n    }\n    return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n    const path = [endNode];\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n        node = matrix.get(node)[length].node;\n        path.push(node);\n    }\n    return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n    return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\n\nfunction makeGetColumnNeighbors({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, }) {\n    return (node) => {\n        const results = [];\n        const cutOffHeight = targetColumnHeight * 1.5;\n        let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n        for (let i = node + 1; i < photos.length + 1; i += 1) {\n            results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n            if (height > cutOffHeight || i === photos.length) {\n                break;\n            }\n            height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n        }\n        return results;\n    };\n}\nfunction buildColumnsModel({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) {\n    const columnsModel = [];\n    const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n        const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\n            columnsRatios[i]) /\n            totalRatio;\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                width: columnWidth,\n                height: columnWidth / ratio(photo),\n                index,\n                photoIndex,\n                photosCount: column.length,\n            },\n        })));\n    }\n    return columnsModel;\n}\nfunction computeColumnsModel({ photos, layoutOptions, targetColumnWidth, }) {\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnsGaps = [];\n    const columnsRatios = [];\n    if (photos.length <= columns) {\n        const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n        for (let i = 0; i < columns; i += 1) {\n            columnsGaps[i] = 2 * padding;\n            columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n        }\n        const columnsModel = buildColumnsModel({\n            path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n            photos,\n            columnsRatios,\n            columnsGaps,\n            containerWidth,\n            spacing,\n            padding,\n        });\n        return { columnsGaps, columnsRatios, columnsModel };\n    }\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\n        spacing * (photos.length - columns) +\n        2 * padding * photos.length) /\n        columns;\n    const getNeighbors = makeGetColumnNeighbors({\n        photos,\n        targetColumnWidth,\n        targetColumnHeight,\n        spacing,\n        padding,\n    });\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.slice(path[i], path[i + 1]);\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n    }\n    const columnsModel = buildColumnsModel({\n        path,\n        photos,\n        columnsRatios,\n        columnsGaps,\n        containerWidth,\n        spacing,\n        padding,\n    });\n    return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n        photos,\n        layoutOptions,\n        targetColumnWidth,\n    });\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\n        if (columns > 1) {\n            return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n        }\n        return undefined;\n    }\n    return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({ photos, layoutOptions, }) {\n    return computeLayout({ photos, layoutOptions });\n}\n\nfunction defaultRenderColumnContainer({ columnContainerProps, children, }) {\n    return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n    const { layout, spacing, padding } = layoutOptions;\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n    }\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\n    const columnContainerProps = {\n        className: \"react-photo-album--column\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            width: cssColumnWidth(props),\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n            ...style,\n        },\n        ...restColumnContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n        layoutOptions,\n        columnContainerProps,\n        children,\n        ...rest,\n    })));\n}\n\nfunction ColumnsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n    if (!columnsLayout)\n        return null;\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n    return (React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `column-${columnIndex}`, layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeMasonryLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    if (columnWidth <= 0) {\n        return columns > 1\n            ? computeMasonryLayout({\n                ...props,\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\n            })\n            : undefined;\n    }\n    const columnsCurrentTopPositions = [];\n    for (let i = 0; i < columns; i += 1) {\n        columnsCurrentTopPositions[i] = 0;\n    }\n    const columnsModel = photos.reduce((model, photo, index) => {\n        const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n        columnsCurrentTopPositions[shortestColumn] =\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n        model[shortestColumn].push({ photo, index });\n        return model;\n    }, Array.from({ length: columns }).map(() => []));\n    return columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n            width: columnWidth,\n            height: columnWidth / ratio(photo),\n            index,\n            photoIndex,\n            photosCount: column.length,\n        },\n    })));\n}\n\nfunction MasonryLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n    if (!masonryLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `masonry-column-${columnIndex}`, layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n    return (React.createElement(\"div\", { ref: containerRef, ...containerProps }, children));\n}\nfunction ContainerRenderer(props) {\n    const { layout, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\n    const containerProps = {\n        className: `react-photo-album react-photo-album--${layout}`,\n        style: {\n            display: \"flex\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"space-between\",\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n            ...style,\n        },\n        ...restContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n        containerProps,\n        containerRef,\n        layout,\n        children,\n    })));\n}\n\nfunction useArray(array) {\n    const ref = React.useRef(array);\n    if (!array || !ref.current || array.join() !== ref.current.join()) {\n        ref.current = array;\n    }\n    return ref.current;\n}\n\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n    const { containerWidth, scrollbarWidth } = state;\n    if (containerWidth !== undefined &&\n        scrollbarWidth !== undefined &&\n        newContainerWidth !== undefined &&\n        newScrollbarWidth !== undefined &&\n        newContainerWidth > containerWidth &&\n        newContainerWidth - containerWidth <= 20 &&\n        newScrollbarWidth < scrollbarWidth) {\n        return { containerWidth, scrollbarWidth: newScrollbarWidth };\n    }\n    return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth\n        ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth }\n        : state;\n}\nfunction resolveContainerWidth(el, breakpoints) {\n    let width = el === null || el === void 0 ? void 0 : el.clientWidth;\n    if (width !== undefined && breakpoints && breakpoints.length > 0) {\n        const sorted = [...breakpoints.filter((x) => x > 0)].sort((a, b) => b - a);\n        sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n        const threshold = width;\n        width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n    }\n    return width;\n}\nfunction useContainerWidth(breakpoints, defaultContainerWidth) {\n    const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n        containerWidth: defaultContainerWidth,\n    });\n    const ref = React.useRef(null);\n    const observerRef = React.useRef();\n    const containerRef = React.useCallback((node) => {\n        var _a;\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n        observerRef.current = undefined;\n        ref.current = node;\n        const updateWidth = () => dispatch({\n            newContainerWidth: resolveContainerWidth(ref.current, breakpoints),\n            newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth,\n        });\n        updateWidth();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateWidth);\n            observerRef.current.observe(node);\n        }\n    }, [breakpoints]);\n    return { containerRef, containerWidth };\n}\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, containerWidth) {\n    return typeof value === \"function\" ? value(containerWidth) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n    return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n    const value = unwrapParameter(parameter, containerWidth);\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\n\nfunction resolveLayoutOptions({ layout, onClick, containerWidth, targetRowHeight, rowConstraints, columns, spacing, padding, sizes, }) {\n    return {\n        layout,\n        onClick,\n        containerWidth,\n        columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n        spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n        padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n        targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n            (w) => w / 5,\n            (w) => w / 4,\n            (w) => w / 3,\n            (w) => w / 2,\n        ]),\n        rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n        sizes,\n    };\n}\nfunction resolveComponentsProps(componentsProps, containerWidth) {\n    return typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n}\nfunction renderLayout(props, containerWidth, componentsProps) {\n    const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n    const layoutOptions = resolveLayoutOptions({ containerWidth, ...props });\n    const commonLayoutProps = { photos, renderPhoto, componentsProps };\n    if (layout === \"rows\") {\n        return (React.createElement(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps }));\n    }\n    if (layout === \"columns\") {\n        return (React.createElement(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n    }\n    return (React.createElement(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n}\nfunction PhotoAlbum(props) {\n    const { photos, layout, renderContainer, defaultContainerWidth, breakpoints } = props;\n    const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints), defaultContainerWidth);\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n        return null;\n    const componentsProps = resolveComponentsProps(props.componentsProps, containerWidth);\n    return (React.createElement(ContainerRenderer, { layout: layout, containerRef: containerRef, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps }, containerWidth ? renderLayout(props, containerWidth, componentsProps) : null));\n}\n\nexport { PhotoAlbum, PhotoAlbum as default };\n"],"names":["ratio","_ref","width","height","round","value","decimals","arguments","length","undefined","factor","Math","pow","Number","EPSILON","MinHeap","comparator","_classCallCheck","this","heap","n","_createClass","key","i","j","temp","k","k2","floor","greater","swap","element","swim","max","pop","sink","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","rank","queue","el","weight","a","b","push","id","_loop","_queue$pop","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","size","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","spacing","padding","reduce","acc","photo","cost","photos","targetRowHeight","slice","commonHeight","computeRowsLayout","_ref4","layoutOptions","rowConstraints","limitNodeSearch","_ref2","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_ref3","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","layout","_loop2","map","index","_ref5","_ref6","photoIndex","photosCount","calcWidth","base","_ref7","_ref8","gaps","concat","cssPhotoWidth","calculateSizesValue","match","PhotoRenderer","props","_ref11","_props$imageProps","imageProps","_props$imageProps2","style","restImageProps","_objectWithoutProperties","_excluded","renderPhoto","onClick","imageStyle","_objectSpread","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","src","alt","title","className","loading","decoding","srcSet","sizes","images","find","_ref9","sort","first","second","image","join","_ref10","viewport","ceil","srcSetAndSizes","renderDefaultPhoto","options","unwrappedStyle","rest","_excluded2","React","wrapped","wrapperStyle","defaultRenderRowContainer","_ref12","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","_props$rowContainerPr","_props$rowContainerPr2","restRowContainerProps","_excluded3","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","_ref13","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","_loop3","currentQueue","_toConsumableArray","keys","clear","accumulatedWeight","_ref14","paths","nextPath","computeShortestPath","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","_loop4","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","targetColumnWidth","columns","averageRatio","Array","from","_","targetColumnHeight","_ref15","cutOffHeight","makeGetColumnNeighbors","computeLayout","_computeColumnsModel","findIndex","columnModel","_ref19","_ref19$layout","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","_props$columnContaine","_props$columnContaine2","restColumnContainerProps","_excluded4","_excluded5","ColumnsLayout","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","_props$containerProps","_props$containerProps2","restContainerProps","_excluded6","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints","clientWidth","sorted","filter","x","threshold","breakpoint","Object","freeze","unwrap","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","renderLayout","_ref27","w","resolveLayoutOptions","commonLayoutProps","PhotoAlbum","defaultContainerWidth","_useContainerWidth","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","resolveComponentsProps"],"sourceRoot":""}