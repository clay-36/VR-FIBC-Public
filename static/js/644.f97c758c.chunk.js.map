{"version":3,"file":"static/js/644.f97c758c.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx","pages/Home/styles.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport ReactPlayer from 'react-player';\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"../../../pages/Home/styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  video,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade delay={200}>\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {video ? <ReactPlayer url='https://www.youtube.com/watch?v=9g2OOUa9tjc' height=\"30vh\" width=\"40vh\" controls={true}/> : <SvgIcon src={icon} width=\"100%\" height=\"100%\" />}\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade delay={200}>\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 3rem 0 3rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 1rem 0 1rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"NotoSans-Regular\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","fixedWidth","children","onClick","_jsx","withTranslation","icon","video","title","content","section","t","id","LeftContentSection","Fade","delay","_jsxs","Row","justify","align","Col","lg","md","sm","xs","ReactPlayer","url","height","width","controls","SvgIcon","src","ContentWrapper","Content","ServiceWrapper","map","item","span","MinTitle","MinPara","RightBlockContainer","_templateObject2","_templateObject3","ButtonWrapper","_templateObject4","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","_objectSpread","RightContentBlock","_templateObject5","_templateObject6"],"sourceRoot":""}