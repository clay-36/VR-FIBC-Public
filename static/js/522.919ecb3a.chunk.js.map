{"version":3,"file":"static/js/522.919ecb3a.chunk.js","mappings":"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","sources":["pages/About/index.tsx","pages/About/styles.ts","../node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["import { lazy } from \"react\";\nimport { Row, Col, Image } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Fade, Zoom } from \"react-awesome-reveal\";\nimport AboutContent from \"../../content/AboutContent.json\";\nimport PhotoAlbum from \"react-photo-album\";\nimport ReactPlayer from 'react-player';\n\n\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper\n} from \"./styles\";\n\n\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\n\n\nconst About = () => {\n    const photos = [\n        { src: \"img/image/1-min.JPG\", width: 800, height: 600 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/14-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/15-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/12-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/13-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/16-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n      ];\n\n  return (<Container>\n    <ScrollToTop />\n    <div>\n    <LeftContentSection>\n      <Fade delay={200}>\n      <h1>Who we are?!</h1>\n        <Row justify=\"space-between\" align=\"middle\" id=\"about_home\">\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <ReactPlayer url='https://www.youtube.com/watch?v=9g2OOUa9tjc' height=\"30vh\" width=\"40vh\" controls={true}/>\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h3>Our Customer-Centric Approach</h3>\n              <Content>At VR FIBC Bags, we prioritize your needs above all else. Our commitment to providing tailored solutions means we never resort to aggressive sales tactics. Instead, we offer honest advice and guidance that aligns with your specific requirements. Our dedication to customer satisfaction extends beyond mere product supply – we can also facilitate delivery and collection of bulk bags, alongside training your staff in proper handling procedures.</Content>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n    <LeftContentSection>\n      <Fade delay={200}>\n        <Row justify=\"space-between\" align=\"middle\" id=\"about_home\">\n        <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h3>Personalized Solutions for Every Client</h3>\n              <Content>We take pride in our ability to deliver personalized and bespoke services to all our clients, regardless of their size or needs. Whether you're a small-scale operation or a large enterprise, our approach remains consistent: we cater to your unique demands. Our expertise in bulk bags and packaging solutions ensures that you receive the perfect fit for your business.</Content>               \n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <Image src=\"img/image/1-nmin.jpeg\" width=\"800\" height=\"600\" />\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n    <LeftContentSection>\n      <Fade delay={200}>\n        <Row justify=\"space-between\" align=\"middle\" id=\"about_home\">\n        <Col lg={11} md={11} sm={12} xs={24}>\n        <Image src=\"img/image/2-nmin.jpeg\" width=\"800\" height=\"600\" />\n          </Col>\n        <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n            <h3>Unmatched Sourcing and Quoting</h3>\n              <Content>Struggling to find the exact product you're looking for? Look no further. VR FIBC JUMBO BAG INDUSTRIES is here to help. Our extensive network and industry knowledge enable us to source even the most specific products to meet your requirements. If you're seeking a reliable supplier for bulk bags, reach out to us for a quote. With VR FIBC JUMBO BAG INDUSTRIES, your search ends here.</Content>\n            </ContentWrapper>\n          </Col>\n          \n        </Row>\n      </Fade>\n    </LeftContentSection>\n          <PhotoAlbum layout=\"rows\" photos={photos} padding={5} spacing={5} />\n</div></Container>\n  );\n};\n\nexport default About;\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 3rem 0 3rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 1rem 0 1rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"NotoSans-Regular\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","\"use client\";\nimport * as React from \"react\";\nfunction ratio({ width, height }) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1))\n        k2 += 1;\n      if (!this.greater(k, k2))\n        break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0)\n      return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */ new Map();\n  const visited = /* @__PURE__ */ new Set();\n  const storedShortestPaths = /* @__PURE__ */ new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n  queue.push({ id: startNode, weight: 0 });\n  while (queue.size() > 0) {\n    const { id, weight } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({ id: neighbor, weight: newWeight });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return (node) => {\n    var _a, _b;\n    const { containerWidth, spacing, padding } = layoutOptions;\n    const results = /* @__PURE__ */ new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset)\n        break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0)\n        break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0)\n    return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(\n      row.map(({ photo }) => photo),\n      containerWidth,\n      spacing,\n      padding\n    );\n    layout.push(\n      row.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      }))\n    );\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter((cls) => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(\n      !images.find(({ width }) => width === photo.width) ? [{ src: photo.src, width: photo.width, height: photo.height }] : []\n    ).sort((first, second) => first.width - second.width).map((image) => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: { style, className, ...restImageProps } = {},\n    renderPhoto\n  } = props;\n  const { onClick } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null,\n    ...(layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n    ...onClick ? { cursor: \"pointer\" } : null,\n    ...style\n  };\n  const handleClick = onClick ? (event) => {\n    onClick({ event, photo, index: layout.index });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = (options) => {\n    const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n    return React.createElement(\n      \"img\",\n      {\n        alt,\n        ...srcSet ? { srcSet, sizes } : null,\n        src,\n        style: (options == null ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle,\n        ...rest\n      }\n    );\n  };\n  const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: { style, className, ...restRowContainerProps } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: { imageProps, rowContainerProps }\n  } = props;\n  const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n  if (!rowsLayout)\n    return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(\n    RowContainerRenderer,\n    {\n      key: `row-${rowIndex}`,\n      layoutOptions,\n      rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer,\n      rowContainerProps\n    },\n    row.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */ new Map();\n  const queue = /* @__PURE__ */ new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach((node) => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({ neighbor, weight }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = { node, weight: newWeight };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return (node) => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce(\n      (total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio,\n      0\n    );\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(\n      column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      }))\n    );\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return { columnsGaps, columnsRatios, columnsModel: columnsModel2 };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(\n    (columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0\n  ) >= 0) {\n    if (columns > 1) {\n      return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n    }\n    return void 0;\n  }\n  return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({ photos, layoutOptions });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n  const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n  const { layout, spacing, padding } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce(\n    (acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2,\n    0\n  );\n  return `calc((100% - ${round(\n    (columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps,\n    3\n  )}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: { style, className, ...restColumnContainerProps } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n  if (!columnsLayout)\n    return null;\n  const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `column-${columnIndex}`,\n      layoutOptions,\n      columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps,\n      columnsRatios,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeMasonryLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: { ...layoutOptions, columns: columns - 1 }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce(\n    (model, photo, index) => {\n      const shortestColumn = columnsCurrentTopPositions.reduce(\n        (currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn,\n        0\n      );\n      columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n      model[shortestColumn].push({ photo, index });\n      return model;\n    },\n    Array.from({ length: columns }).map(() => [])\n  );\n  return columnsModel.map(\n    (column) => column.map(({ photo, index }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    }))\n  );\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n  if (!masonryLayout)\n    return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `masonry-column-${columnIndex}`,\n      layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n  return React.createElement(\"div\", { ref: containerRef, ...containerProps }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: { style, className, ...restContainerProps } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n  const { containerWidth, scrollbarWidth } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return { containerWidth, scrollbarWidth: newScrollbarWidth };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter((x) => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(\n    (node) => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n      observerRef.current = void 0;\n      ref.current = node;\n      const updateWidth = () => dispatch({\n        newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n        newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n      });\n      updateWidth();\n      if (node && typeof ResizeObserver !== \"undefined\") {\n        observerRef.current = new ResizeObserver(updateWidth);\n        observerRef.current.observe(node);\n      }\n    },\n    [breakpoints2]\n  );\n  return { containerRef, containerWidth };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n      (w) => w / 5,\n      (w) => w / 4,\n      (w) => w / 3,\n      (w) => w / 2\n    ]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const { photos, componentsProps: componentsPropsProp } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const { layout, spacing, padding, rowConstraints } = layoutOptions;\n    if (layout === \"rows\") {\n      const { singleRowMaxHeight } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(\n          photos.reduce(\n            (acc, { width, height }) => acc + width / height * singleRowMaxHeight - 2 * padding,\n            padding * photos.length * 2 + spacing * (photos.length - 1)\n          )\n        );\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = { maxWidth, ...componentsProps.containerProps.style };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n  const commonLayoutProps = { photos, renderPhoto, componentsProps };\n  if (layout === \"rows\") {\n    return React.createElement(\n      RowsLayout,\n      {\n        layoutOptions,\n        renderRowContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  if (layout === \"columns\") {\n    return React.createElement(\n      ColumnsLayout,\n      {\n        layoutOptions,\n        renderColumnContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  return React.createElement(\n    MasonryLayout,\n    {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    }\n  );\n}\nfunction PhotoAlbum(props) {\n  const { photos, layout, renderContainer, defaultContainerWidth, breakpoints: breakpoints2 } = props;\n  const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n    return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({ containerWidth, ...props }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(\n    ContainerRenderer,\n    {\n      layout,\n      containerRef,\n      renderContainer,\n      containerProps: componentsProps.containerProps\n    },\n    layoutOptions && renderLayout(props, componentsProps, layoutOptions)\n  );\n}\nexport {\n  PhotoAlbum,\n  PhotoAlbum as default\n};\n"],"names":["Container","lazy","ScrollToTop","_jsxs","children","_jsx","LeftContentSection","Fade","delay","Row","justify","align","id","Col","lg","md","sm","xs","ReactPlayer","url","height","width","controls","ContentWrapper","Content","Image","src","PhotoAlbum","layout","photos","padding","spacing","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","ratio","_ref","round","value","decimals","arguments","length","undefined","factor","Math","pow","Number","EPSILON","MinHeap","comparator","_classCallCheck","this","heap","n","_createClass","key","i","j","temp","k","k2","floor","greater","swap","element","swim","max","pop","sink","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","rank","queue","el","weight","a","b","push","_loop","_queue$pop","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","size","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","reduce","acc","photo","cost","targetRowHeight","slice","commonHeight","computeRowsLayout","_ref4","layoutOptions","rowConstraints","limitNodeSearch","_ref2","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_ref3","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","_loop2","map","index","_ref5","_ref6","photoIndex","photosCount","clsx","_len","classes","Array","_key","concat","filter","cls","Boolean","join","calcWidth","base","_ref7","_ref8","gaps","cssPhotoWidth","calculateSizesValue","match","PhotoRenderer","props","_ref11","_props$imageProps","imageProps","_props$imageProps2","style","className","restImageProps","_objectWithoutProperties","renderPhoto","onClick","imageStyle","_objectSpread","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","loading","decoding","srcSet","sizes","images","find","_ref9","sort","first","second","image","_ref10","viewport","ceil","srcSetAndSizes","renderDefaultPhoto","options","unwrappedStyle","rest","React","wrapped","wrapperStyle","defaultRenderRowContainer","_ref12","rowContainerProps","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","_props$rowContainerPr","_props$rowContainerPr2","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","_props$componentsProp","componentsProps","rowsLayout","_ref13","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","_loop3","currentQueue","_toConsumableArray","keys","clear","accumulatedWeight","_ref14","paths","nextPath","computeShortestPath","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","_loop4","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","targetColumnWidth","columns","averageRatio","from","_","targetColumnHeight","_ref15","cutOffHeight","makeGetColumnNeighbors","computeLayout","_computeColumnsModel","findIndex","columnModel","_ref19","_ref19$layout","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ratio2","ColumnContainerRenderer","renderColumnContainer","_props$columnContaine","_props$columnContaine2","restColumnContainerProps","ColumnsLayout","_props$componentsProp2","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","_props$componentsProp3","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","_props$containerProps","_props$containerProps2","restContainerProps","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints2","clientWidth","sorted","x","threshold","breakpoint","breakpoints","Object","freeze","unwrap","arg","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","defaultContainerWidth","_useContainerWidth","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","_ref27","w","resolveLayoutOptions","singleRowMaxHeight","maxWidth","_ref29","resolveComponentsProps","commonLayoutProps","renderLayout"],"sourceRoot":""}