{"version":3,"file":"static/js/522.362ffc5f.chunk.js","mappings":"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","sources":["pages/About/index.tsx","../node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["import { lazy } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Fade, Zoom } from \"react-awesome-reveal\";\nimport AboutContent from \"../../content/AboutContent.json\";\nimport PhotoAlbum from \"react-photo-album\";\n\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\n\n\nconst About = () => {\n    const photos = [\n        { src: \"img/image/1-min.JPG\", width: 800, height: 600 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/14-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/15-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/12-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/13-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/16-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n      ];\n\n  return (<Container>\n    <ScrollToTop />\n    <div><ContentBlock\n    type=\"left\"\n    video={true}\n    title={AboutContent.title}\n    content={AboutContent.text}\n    section={AboutContent.section}\n    icon=\"graphs.svg\"\n    id=\"FIBC_PRODUCT\"\n  />\n          <PhotoAlbum layout=\"rows\" photos={photos} padding={5} spacing={5} />\n</div></Container>\n  );\n};\n\nexport default About;\n","import * as React from 'react';\n\nfunction ratio({ width, height }) {\n    return width / height;\n}\n\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\n\nfunction rankingFunctionComparator(rank) {\n    return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n    constructor(comparator) {\n        this.comparator = comparator;\n        this.heap = [];\n        this.n = 0;\n    }\n    greater(i, j) {\n        return this.comparator(this.heap[i], this.heap[j]) < 0;\n    }\n    swap(i, j) {\n        const temp = this.heap[i];\n        this.heap[i] = this.heap[j];\n        this.heap[j] = temp;\n    }\n    swim(i) {\n        let k = i;\n        let k2 = Math.floor(k / 2);\n        while (k > 1 && this.greater(k2, k)) {\n            this.swap(k2, k);\n            k = k2;\n            k2 = Math.floor(k / 2);\n        }\n    }\n    sink(i) {\n        let k = i;\n        let k2 = k * 2;\n        while (k2 <= this.n) {\n            if (k2 < this.n && this.greater(k2, k2 + 1))\n                k2 += 1;\n            if (!this.greater(k, k2))\n                break;\n            this.swap(k, k2);\n            k = k2;\n            k2 = k * 2;\n        }\n    }\n    push(element) {\n        this.n += 1;\n        this.heap[this.n] = element;\n        this.swim(this.n);\n    }\n    pop() {\n        if (this.n === 0)\n            return undefined;\n        this.swap(1, this.n);\n        this.n -= 1;\n        const max = this.heap.pop();\n        this.sink(1);\n        return max;\n    }\n    size() {\n        return this.n;\n    }\n}\n\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n    const precedentsMap = new Map();\n    const visited = new Set();\n    const storedShortestPaths = new Map();\n    storedShortestPaths.set(startNode, 0);\n    const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n    queue.push({ id: startNode, weight: 0 });\n    while (queue.size() > 0) {\n        const { id, weight } = queue.pop();\n        if (!visited.has(id)) {\n            const neighboringNodes = graph(id);\n            visited.add(id);\n            neighboringNodes.forEach((neighborWeight, neighbor) => {\n                const newWeight = weight + neighborWeight;\n                const currentId = precedentsMap.get(neighbor);\n                const currentWeight = storedShortestPaths.get(neighbor);\n                if (currentWeight === undefined ||\n                    (currentWeight > newWeight &&\n                        (currentWeight / newWeight > 1.005 || (currentId !== undefined && currentId < id)))) {\n                    storedShortestPaths.set(neighbor, newWeight);\n                    queue.push({ id: neighbor, weight: newWeight });\n                    precedentsMap.set(neighbor, id);\n                }\n            });\n        }\n    }\n    return storedShortestPaths.has(endNode) ? precedentsMap : undefined;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n    const nodes = [];\n    for (let node = endNode; node !== undefined; node = precedentsMap.get(node)) {\n        nodes.push(node);\n    }\n    return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n    return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n}\n\nfunction findIdealNodeSearch({ photos, targetRowHeight, containerWidth, }) {\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n    return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n    const row = photos.slice(i, j);\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n}\nfunction makeGetRowNeighbors({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, }) {\n    return (node) => {\n        var _a, _b;\n        const { containerWidth, spacing, padding } = layoutOptions;\n        const results = new Map();\n        results.set(node, 0);\n        const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n        const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n        for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n            if (i - node > endOffset)\n                break;\n            const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n            if (currentCost === undefined)\n                break;\n            results.set(i, currentCost);\n        }\n        return results;\n    };\n}\nfunction computeRowsLayout({ photos, layoutOptions, }) {\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n    const getNeighbors = makeGetRowNeighbors({\n        photos,\n        layoutOptions,\n        targetRowHeight,\n        limitNodeSearch,\n        rowConstraints,\n    });\n    const path = findShortestPath(getNeighbors, 0, photos.length);\n    if (path === undefined)\n        return undefined;\n    const layout = [];\n    for (let i = 1; i < path.length; i += 1) {\n        const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\n        layout.push(row.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                height,\n                width: height * ratio(photo),\n                index,\n                photoIndex,\n                photosCount: row.length,\n            },\n        })));\n    }\n    return layout;\n}\n\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n    return layoutOptions.layout !== \"rows\"\n        ? `calc(100% - ${2 * layoutOptions.padding}px)`\n        : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n    var _a, _b;\n    return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n    let srcSet;\n    let sizes;\n    if (photo.images && photo.images.length > 0) {\n        srcSet = photo.images\n            .concat(!photo.images.find(({ width }) => width === photo.width)\n            ? [{ src: photo.src, width: photo.width, height: photo.height }]\n            : [])\n            .sort((first, second) => first.width - second.width)\n            .map((image) => `${image.src} ${image.width}w`)\n            .join(\", \");\n        if (layoutOptions.sizes) {\n            sizes = (layoutOptions.sizes.sizes || [])\n                .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\n                .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\n                .join(\", \");\n        }\n        else {\n            sizes = `${Math.ceil((layout.width / layoutOptions.containerWidth) * 100)}vw`;\n        }\n    }\n    return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n    var _a, _b;\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\n    const { onClick } = layoutOptions;\n    const imageStyle = {\n        display: \"block\",\n        boxSizing: \"content-box\",\n        width: cssPhotoWidth(layout, layoutOptions),\n        height: \"auto\",\n        aspectRatio: `${photo.width} / ${photo.height}`,\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\n            layout.photoIndex < layout.photosCount - 1\n            ? { marginBottom: `${layoutOptions.spacing}px` }\n            : null),\n        ...(onClick ? { cursor: \"pointer\" } : null),\n        ...style,\n    };\n    const handleClick = onClick\n        ? (event) => {\n            onClick({ event, photo, index: layout.index });\n        }\n        : undefined;\n    const imageProps = {\n        src: photo.src,\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n        title: photo.title,\n        onClick: handleClick,\n        style: imageStyle,\n        className: \"react-photo-album--photo\",\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...srcSetAndSizes(photo, layout, layoutOptions),\n        ...restImageProps,\n    };\n    const renderDefaultPhoto = (options) => {\n        const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n        return (React.createElement(\"img\", { alt: alt, ...(srcSet ? { srcSet, sizes } : null), src: src, style: (options === null || options === void 0 ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle, ...rest }));\n    };\n    const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n        display,\n        boxSizing,\n        width,\n        aspectRatio,\n        padding,\n        marginBottom,\n        cursor,\n    }))(imageStyle);\n    return (React.createElement(React.Fragment, null, (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n        photo,\n        layout,\n        layoutOptions,\n        imageProps,\n        renderDefaultPhoto,\n        wrapperStyle,\n    })) !== null && _b !== void 0 ? _b : renderDefaultPhoto()));\n}\n\nfunction defaultRenderRowContainer({ rowContainerProps, children, }) {\n    return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\n    const rowContainerProps = {\n        className: \"react-photo-album--row\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\n            ...style,\n        },\n        ...restRowContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n        layoutOptions,\n        rowIndex,\n        rowsCount,\n        rowContainerProps,\n        children,\n    })));\n}\n\nfunction RowsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps } = props;\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n    if (!rowsLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => (React.createElement(RowContainerRenderer, { key: `row-${rowIndex}`, layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps }, row.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n    const matrix = new Map();\n    const queue = new Set();\n    queue.add(startNode);\n    for (let length = 0; length < pathLength; length += 1) {\n        const currentQueue = [...queue.keys()];\n        queue.clear();\n        currentQueue.forEach((node) => {\n            const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n            graph(node).forEach(({ neighbor, weight }) => {\n                let paths = matrix.get(neighbor);\n                if (!paths) {\n                    paths = [];\n                    matrix.set(neighbor, paths);\n                }\n                const newWeight = accumulatedWeight + weight;\n                const nextPath = paths[length + 1];\n                if (!nextPath ||\n                    (nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node))) {\n                    paths[length + 1] = { node, weight: newWeight };\n                }\n                if (length < pathLength - 1 && neighbor !== endNode) {\n                    queue.add(neighbor);\n                }\n            });\n        });\n    }\n    return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n    const path = [endNode];\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n        node = matrix.get(node)[length].node;\n        path.push(node);\n    }\n    return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n    return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\n\nfunction makeGetColumnNeighbors({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, }) {\n    return (node) => {\n        const results = [];\n        const cutOffHeight = targetColumnHeight * 1.5;\n        let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n        for (let i = node + 1; i < photos.length + 1; i += 1) {\n            results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n            if (height > cutOffHeight || i === photos.length) {\n                break;\n            }\n            height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n        }\n        return results;\n    };\n}\nfunction buildColumnsModel({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) {\n    const columnsModel = [];\n    const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n        const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\n            columnsRatios[i]) /\n            totalRatio;\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                width: columnWidth,\n                height: columnWidth / ratio(photo),\n                index,\n                photoIndex,\n                photosCount: column.length,\n            },\n        })));\n    }\n    return columnsModel;\n}\nfunction computeColumnsModel({ photos, layoutOptions, targetColumnWidth, }) {\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnsGaps = [];\n    const columnsRatios = [];\n    if (photos.length <= columns) {\n        const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n        for (let i = 0; i < columns; i += 1) {\n            columnsGaps[i] = 2 * padding;\n            columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n        }\n        const columnsModel = buildColumnsModel({\n            path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n            photos,\n            columnsRatios,\n            columnsGaps,\n            containerWidth,\n            spacing,\n            padding,\n        });\n        return { columnsGaps, columnsRatios, columnsModel };\n    }\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\n        spacing * (photos.length - columns) +\n        2 * padding * photos.length) /\n        columns;\n    const getNeighbors = makeGetColumnNeighbors({\n        photos,\n        targetColumnWidth,\n        targetColumnHeight,\n        spacing,\n        padding,\n    });\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.slice(path[i], path[i + 1]);\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n    }\n    const columnsModel = buildColumnsModel({\n        path,\n        photos,\n        columnsRatios,\n        columnsGaps,\n        containerWidth,\n        spacing,\n        padding,\n    });\n    return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n        photos,\n        layoutOptions,\n        targetColumnWidth,\n    });\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\n        if (columns > 1) {\n            return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n        }\n        return undefined;\n    }\n    return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({ photos, layoutOptions, }) {\n    return computeLayout({ photos, layoutOptions });\n}\n\nfunction defaultRenderColumnContainer({ columnContainerProps, children, }) {\n    return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n    const { layout, spacing, padding } = layoutOptions;\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n    }\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\n    const columnContainerProps = {\n        className: \"react-photo-album--column\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            width: cssColumnWidth(props),\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n            ...style,\n        },\n        ...restColumnContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n        layoutOptions,\n        columnContainerProps,\n        children,\n        ...rest,\n    })));\n}\n\nfunction ColumnsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n    if (!columnsLayout)\n        return null;\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n    return (React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `column-${columnIndex}`, layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeMasonryLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    if (columnWidth <= 0) {\n        return columns > 1\n            ? computeMasonryLayout({\n                ...props,\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\n            })\n            : undefined;\n    }\n    const columnsCurrentTopPositions = [];\n    for (let i = 0; i < columns; i += 1) {\n        columnsCurrentTopPositions[i] = 0;\n    }\n    const columnsModel = photos.reduce((model, photo, index) => {\n        const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n        columnsCurrentTopPositions[shortestColumn] =\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n        model[shortestColumn].push({ photo, index });\n        return model;\n    }, Array.from({ length: columns }).map(() => []));\n    return columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n            width: columnWidth,\n            height: columnWidth / ratio(photo),\n            index,\n            photoIndex,\n            photosCount: column.length,\n        },\n    })));\n}\n\nfunction MasonryLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n    if (!masonryLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `masonry-column-${columnIndex}`, layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n    return (React.createElement(\"div\", { ref: containerRef, ...containerProps }, children));\n}\nfunction ContainerRenderer(props) {\n    const { layout, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\n    const containerProps = {\n        className: `react-photo-album react-photo-album--${layout}`,\n        style: {\n            display: \"flex\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"space-between\",\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n            ...style,\n        },\n        ...restContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n        containerProps,\n        containerRef,\n        layout,\n        children,\n    })));\n}\n\nfunction useArray(array) {\n    const ref = React.useRef(array);\n    if (!array || !ref.current || array.join() !== ref.current.join()) {\n        ref.current = array;\n    }\n    return ref.current;\n}\n\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n    const { containerWidth, scrollbarWidth } = state;\n    if (containerWidth !== undefined &&\n        scrollbarWidth !== undefined &&\n        newContainerWidth !== undefined &&\n        newScrollbarWidth !== undefined &&\n        newContainerWidth > containerWidth &&\n        newContainerWidth - containerWidth <= 20 &&\n        newScrollbarWidth < scrollbarWidth) {\n        return { containerWidth, scrollbarWidth: newScrollbarWidth };\n    }\n    return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth\n        ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth }\n        : state;\n}\nfunction resolveContainerWidth(el, breakpoints) {\n    let width = el === null || el === void 0 ? void 0 : el.clientWidth;\n    if (width !== undefined && breakpoints && breakpoints.length > 0) {\n        const sorted = [...breakpoints.filter((x) => x > 0)].sort((a, b) => b - a);\n        sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n        const threshold = width;\n        width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n    }\n    return width;\n}\nfunction useContainerWidth(breakpoints, defaultContainerWidth) {\n    const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n        containerWidth: defaultContainerWidth,\n    });\n    const ref = React.useRef(null);\n    const observerRef = React.useRef();\n    const containerRef = React.useCallback((node) => {\n        var _a;\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n        observerRef.current = undefined;\n        ref.current = node;\n        const updateWidth = () => dispatch({\n            newContainerWidth: resolveContainerWidth(ref.current, breakpoints),\n            newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth,\n        });\n        updateWidth();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateWidth);\n            observerRef.current.observe(node);\n        }\n    }, [breakpoints]);\n    return { containerRef, containerWidth };\n}\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, containerWidth) {\n    return typeof value === \"function\" ? value(containerWidth) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n    return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n    const value = unwrapParameter(parameter, containerWidth);\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\n\nfunction resolveLayoutOptions({ layout, onClick, containerWidth, targetRowHeight, rowConstraints, columns, spacing, padding, sizes, }) {\n    return {\n        layout,\n        onClick,\n        containerWidth,\n        columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n        spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n        padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n        targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n            (w) => w / 5,\n            (w) => w / 4,\n            (w) => w / 3,\n            (w) => w / 2,\n        ]),\n        rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n        sizes,\n    };\n}\nfunction resolveComponentsProps(componentsProps, containerWidth) {\n    return typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n}\nfunction renderLayout(props, containerWidth, componentsProps) {\n    const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n    const layoutOptions = resolveLayoutOptions({ containerWidth, ...props });\n    const commonLayoutProps = { photos, renderPhoto, componentsProps };\n    if (layout === \"rows\") {\n        return (React.createElement(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps }));\n    }\n    if (layout === \"columns\") {\n        return (React.createElement(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n    }\n    return (React.createElement(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n}\nfunction PhotoAlbum(props) {\n    const { photos, layout, renderContainer, defaultContainerWidth, breakpoints } = props;\n    const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints), defaultContainerWidth);\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n        return null;\n    const componentsProps = resolveComponentsProps(props.componentsProps, containerWidth);\n    return (React.createElement(ContainerRenderer, { layout: layout, containerRef: containerRef, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps }, containerWidth ? renderLayout(props, containerWidth, componentsProps) : null));\n}\n\nexport { PhotoAlbum, PhotoAlbum as default };\n"],"names":["ContentBlock","lazy","Container","ScrollToTop","_jsxs","children","_jsx","type","video","title","AboutContent","content","section","icon","id","PhotoAlbum","layout","photos","src","width","height","padding","spacing","ratio","_ref","round","value","decimals","arguments","length","undefined","factor","Math","pow","Number","EPSILON","MinHeap","comparator","_classCallCheck","this","heap","n","_createClass","key","i","j","temp","k","k2","floor","greater","swap","element","swim","max","pop","sink","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","rank","queue","el","weight","a","b","push","_loop","_queue$pop","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","size","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","reduce","acc","photo","cost","targetRowHeight","slice","commonHeight","computeRowsLayout","_ref4","layoutOptions","rowConstraints","limitNodeSearch","_ref2","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_ref3","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","_loop2","map","index","_ref5","_ref6","photoIndex","photosCount","calcWidth","base","_ref7","_ref8","gaps","concat","cssPhotoWidth","calculateSizesValue","match","PhotoRenderer","props","_ref11","_props$imageProps","imageProps","_props$imageProps2","style","restImageProps","_objectWithoutProperties","_excluded","renderPhoto","onClick","imageStyle","_objectSpread","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","className","loading","decoding","srcSet","sizes","images","find","_ref9","sort","first","second","image","join","_ref10","viewport","ceil","srcSetAndSizes","renderDefaultPhoto","options","unwrappedStyle","rest","_excluded2","React","wrapped","wrapperStyle","defaultRenderRowContainer","_ref12","rowContainerProps","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","_props$rowContainerPr","_props$rowContainerPr2","restRowContainerProps","_excluded3","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","_ref13","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","_loop3","currentQueue","_toConsumableArray","keys","clear","accumulatedWeight","_ref14","paths","nextPath","computeShortestPath","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","_loop4","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","targetColumnWidth","columns","averageRatio","Array","from","_","targetColumnHeight","_ref15","cutOffHeight","makeGetColumnNeighbors","computeLayout","_computeColumnsModel","findIndex","columnModel","_ref19","_ref19$layout","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","_props$columnContaine","_props$columnContaine2","restColumnContainerProps","_excluded4","_excluded5","ColumnsLayout","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","_props$containerProps","_props$containerProps2","restContainerProps","_excluded6","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints","clientWidth","sorted","filter","x","threshold","breakpoint","Object","freeze","unwrap","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","renderLayout","_ref27","w","resolveLayoutOptions","commonLayoutProps","defaultContainerWidth","_useContainerWidth","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","resolveComponentsProps"],"sourceRoot":""}