{"version":3,"file":"static/js/522.471ad6f7.chunk.js","mappings":"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","sources":["pages/About/index.tsx","../node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["import { lazy } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Fade, Zoom } from \"react-awesome-reveal\";\nimport AboutContent from \"../../content/AboutContent.json\";\nimport PhotoAlbum from \"react-photo-album\";\n\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\n\n\nconst About = () => {\n    const photos = [\n        { src: \"img/image/1-min.JPG\", width: 800, height: 600 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/14-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/15-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/12-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/13-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/16-min.JPG\", width: 1600, height: 900 },\n        { src: \"img/image/11-min.JPG\", width: 1600, height: 900 },\n      ];\n\n  return (<Container>\n    <ScrollToTop />\n    <div><ContentBlock\n    type=\"left\"\n    video={true}\n    title={AboutContent.title}\n    content={AboutContent.text}\n    section={AboutContent.section}\n    icon=\"graphs.svg\"\n    id=\"FIBC_PRODUCT\"\n  />\n          <PhotoAlbum layout=\"rows\" photos={photos} padding={5} spacing={5} />\n</div></Container>\n  );\n};\n\nexport default About;\n","\"use client\";\nimport * as React from \"react\";\nfunction ratio({ width, height }) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1))\n        k2 += 1;\n      if (!this.greater(k, k2))\n        break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0)\n      return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */ new Map();\n  const visited = /* @__PURE__ */ new Set();\n  const storedShortestPaths = /* @__PURE__ */ new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n  queue.push({ id: startNode, weight: 0 });\n  while (queue.size() > 0) {\n    const { id, weight } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({ id: neighbor, weight: newWeight });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return (node) => {\n    var _a, _b;\n    const { containerWidth, spacing, padding } = layoutOptions;\n    const results = /* @__PURE__ */ new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset)\n        break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0)\n        break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0)\n    return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(\n      row.map(({ photo }) => photo),\n      containerWidth,\n      spacing,\n      padding\n    );\n    layout.push(\n      row.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      }))\n    );\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter((cls) => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(\n      !images.find(({ width }) => width === photo.width) ? [{ src: photo.src, width: photo.width, height: photo.height }] : []\n    ).sort((first, second) => first.width - second.width).map((image) => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: { style, className, ...restImageProps } = {},\n    renderPhoto\n  } = props;\n  const { onClick } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null,\n    ...(layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n    ...onClick ? { cursor: \"pointer\" } : null,\n    ...style\n  };\n  const handleClick = onClick ? (event) => {\n    onClick({ event, photo, index: layout.index });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = (options) => {\n    const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n    return React.createElement(\n      \"img\",\n      {\n        alt,\n        ...srcSet ? { srcSet, sizes } : null,\n        src,\n        style: (options == null ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle,\n        ...rest\n      }\n    );\n  };\n  const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: { style, className, ...restRowContainerProps } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: { imageProps, rowContainerProps }\n  } = props;\n  const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n  if (!rowsLayout)\n    return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(\n    RowContainerRenderer,\n    {\n      key: `row-${rowIndex}`,\n      layoutOptions,\n      rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer,\n      rowContainerProps\n    },\n    row.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */ new Map();\n  const queue = /* @__PURE__ */ new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach((node) => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({ neighbor, weight }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = { node, weight: newWeight };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return (node) => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce(\n      (total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio,\n      0\n    );\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(\n      column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      }))\n    );\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return { columnsGaps, columnsRatios, columnsModel: columnsModel2 };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(\n    (columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0\n  ) >= 0) {\n    if (columns > 1) {\n      return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n    }\n    return void 0;\n  }\n  return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({ photos, layoutOptions });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n  const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n  const { layout, spacing, padding } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce(\n    (acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2,\n    0\n  );\n  return `calc((100% - ${round(\n    (columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps,\n    3\n  )}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: { style, className, ...restColumnContainerProps } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n  if (!columnsLayout)\n    return null;\n  const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `column-${columnIndex}`,\n      layoutOptions,\n      columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps,\n      columnsRatios,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeMasonryLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: { ...layoutOptions, columns: columns - 1 }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce(\n    (model, photo, index) => {\n      const shortestColumn = columnsCurrentTopPositions.reduce(\n        (currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn,\n        0\n      );\n      columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n      model[shortestColumn].push({ photo, index });\n      return model;\n    },\n    Array.from({ length: columns }).map(() => [])\n  );\n  return columnsModel.map(\n    (column) => column.map(({ photo, index }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    }))\n  );\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n  if (!masonryLayout)\n    return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `masonry-column-${columnIndex}`,\n      layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n  return React.createElement(\"div\", { ref: containerRef, ...containerProps }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: { style, className, ...restContainerProps } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n  const { containerWidth, scrollbarWidth } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return { containerWidth, scrollbarWidth: newScrollbarWidth };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter((x) => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(\n    (node) => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n      observerRef.current = void 0;\n      ref.current = node;\n      const updateWidth = () => dispatch({\n        newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n        newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n      });\n      updateWidth();\n      if (node && typeof ResizeObserver !== \"undefined\") {\n        observerRef.current = new ResizeObserver(updateWidth);\n        observerRef.current.observe(node);\n      }\n    },\n    [breakpoints2]\n  );\n  return { containerRef, containerWidth };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n      (w) => w / 5,\n      (w) => w / 4,\n      (w) => w / 3,\n      (w) => w / 2\n    ]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const { photos, componentsProps: componentsPropsProp } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const { layout, spacing, padding, rowConstraints } = layoutOptions;\n    if (layout === \"rows\") {\n      const { singleRowMaxHeight } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(\n          photos.reduce(\n            (acc, { width, height }) => acc + width / height * singleRowMaxHeight - 2 * padding,\n            padding * photos.length * 2 + spacing * (photos.length - 1)\n          )\n        );\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = { maxWidth, ...componentsProps.containerProps.style };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n  const commonLayoutProps = { photos, renderPhoto, componentsProps };\n  if (layout === \"rows\") {\n    return React.createElement(\n      RowsLayout,\n      {\n        layoutOptions,\n        renderRowContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  if (layout === \"columns\") {\n    return React.createElement(\n      ColumnsLayout,\n      {\n        layoutOptions,\n        renderColumnContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  return React.createElement(\n    MasonryLayout,\n    {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    }\n  );\n}\nfunction PhotoAlbum(props) {\n  const { photos, layout, renderContainer, defaultContainerWidth, breakpoints: breakpoints2 } = props;\n  const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n    return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({ containerWidth, ...props }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(\n    ContainerRenderer,\n    {\n      layout,\n      containerRef,\n      renderContainer,\n      containerProps: componentsProps.containerProps\n    },\n    layoutOptions && renderLayout(props, componentsProps, layoutOptions)\n  );\n}\nexport {\n  PhotoAlbum,\n  PhotoAlbum as default\n};\n"],"names":["ContentBlock","lazy","Container","ScrollToTop","_jsxs","children","_jsx","type","video","title","AboutContent","content","section","icon","id","PhotoAlbum","layout","photos","src","width","height","padding","spacing","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","ratio","_ref","round","value","decimals","arguments","length","undefined","factor","Math","pow","Number","EPSILON","MinHeap","comparator","_classCallCheck","this","heap","n","_createClass","key","i","j","temp","k","k2","floor","greater","swap","element","swim","max","pop","sink","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","rank","queue","el","weight","a","b","push","_loop","_queue$pop","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","size","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","reduce","acc","photo","cost","targetRowHeight","slice","commonHeight","computeRowsLayout","_ref4","layoutOptions","rowConstraints","limitNodeSearch","_ref2","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_ref3","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","_loop2","map","index","_ref5","_ref6","photoIndex","photosCount","clsx","_len","classes","Array","_key","concat","filter","cls","Boolean","join","calcWidth","base","_ref7","_ref8","gaps","cssPhotoWidth","calculateSizesValue","match","PhotoRenderer","props","_ref11","_props$imageProps","imageProps","_props$imageProps2","style","className","restImageProps","_objectWithoutProperties","renderPhoto","onClick","imageStyle","_objectSpread","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","loading","decoding","srcSet","sizes","images","find","_ref9","sort","first","second","image","_ref10","viewport","ceil","srcSetAndSizes","renderDefaultPhoto","options","unwrappedStyle","rest","React","wrapped","wrapperStyle","defaultRenderRowContainer","_ref12","rowContainerProps","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","_props$rowContainerPr","_props$rowContainerPr2","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","_props$componentsProp","componentsProps","rowsLayout","_ref13","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","_loop3","currentQueue","_toConsumableArray","keys","clear","accumulatedWeight","_ref14","paths","nextPath","computeShortestPath","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","_loop4","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","targetColumnWidth","columns","averageRatio","from","_","targetColumnHeight","_ref15","cutOffHeight","makeGetColumnNeighbors","computeLayout","_computeColumnsModel","findIndex","columnModel","_ref19","_ref19$layout","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ratio2","ColumnContainerRenderer","renderColumnContainer","_props$columnContaine","_props$columnContaine2","restColumnContainerProps","ColumnsLayout","_props$componentsProp2","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","_props$componentsProp3","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","_props$containerProps","_props$containerProps2","restContainerProps","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints2","clientWidth","sorted","x","threshold","breakpoint","breakpoints","Object","freeze","unwrap","arg","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","defaultContainerWidth","_useContainerWidth","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","_ref27","w","resolveLayoutOptions","singleRowMaxHeight","maxWidth","_ref29","resolveComponentsProps","commonLayoutProps","renderLayout"],"sourceRoot":""}