{"version":3,"file":"static/js/781.c2b574d9.chunk.js","mappings":"4PAAaA,EAAA,sBAAAC,EAAA,uCAAAC,EAAA,sBAAAC,EAAA,sBAAAC,EAAA,4EAAAC,EAAA,sBAEb,SAASC,EAAKC,GACZ,OADoBA,EAALC,MAAaD,EAANE,MAExB,CACA,SAASC,EAAMC,GAAqB,IAAdC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACzBG,EAAMC,KAAAC,IAAG,GAAMN,GACrB,OAAOK,KAAKP,OAAOC,EAAQQ,OAAOC,SAAWJ,GAAUA,CACzD,CAGC,IACKK,EAAO,WACX,SAAAA,EAAYC,IAAYC,EAAAA,EAAAA,GAAA,KAAAF,GACtBG,KAAKF,WAAaA,EAClBE,KAAKC,KAAO,GACZD,KAAKE,EAAI,CACX,CA+CC,OA/CAC,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,IAAA,UAAAjB,MACD,SAAQkB,EAAGC,GACT,OAAON,KAAKF,WAAWE,KAAKC,KAAKI,GAAIL,KAAKC,KAAKK,IAAM,CACvD,GAAC,CAAAF,IAAA,OAAAjB,MACD,SAAKkB,EAAGC,GACN,IAAMC,EAAOP,KAAKC,KAAKI,GACvBL,KAAKC,KAAKI,GAAKL,KAAKC,KAAKK,GACzBN,KAAKC,KAAKK,GAAKC,CACjB,GAAC,CAAAH,IAAA,OAAAjB,MACD,SAAKkB,GAGH,IAFA,IAAIG,EAAIH,EACJI,EAAKhB,KAAKiB,MAAMF,EAAI,GACjBA,EAAI,GAAKR,KAAKW,QAAQF,EAAID,IAC/BR,KAAKY,KAAKH,EAAID,GACdA,EAAIC,EACJA,EAAKhB,KAAKiB,MAAMF,EAAI,EAExB,GAAC,CAAAJ,IAAA,OAAAjB,MACD,SAAKkB,GAGH,IAFA,IAAIG,EAAIH,EACJI,EAAS,EAAJD,EACFC,GAAMT,KAAKE,IACZO,EAAKT,KAAKE,GAAKF,KAAKW,QAAQF,EAAIA,EAAK,KACvCA,GAAM,GACHT,KAAKW,QAAQH,EAAGC,KAErBT,KAAKY,KAAKJ,EAAGC,GAEbA,EAAS,GADTD,EAAIC,EAGR,GAAC,CAAAL,IAAA,OAAAjB,MACD,SAAK0B,GACHb,KAAKE,GAAK,EACVF,KAAKC,KAAKD,KAAKE,GAAKW,EACpBb,KAAKc,KAAKd,KAAKE,EACjB,GAAC,CAAAE,IAAA,MAAAjB,MACD,WACE,GAAe,IAAXa,KAAKE,EAAT,CAEAF,KAAKY,KAAK,EAAGZ,KAAKE,GAClBF,KAAKE,GAAK,EACV,IAAMa,EAAMf,KAAKC,KAAKe,MAEtB,OADAhB,KAAKiB,KAAK,GACHF,CALQ,CAMjB,GAAC,CAAAX,IAAA,OAAAjB,MACD,WACE,OAAOa,KAAKE,CACd,KAACL,CAAA,CApDU,GAuFb,SAASqB,EAAiBC,EAAOC,EAAWC,GAC1C,IAAMC,EAlCR,SAA4BH,EAAOC,EAAWC,GAC5C,IAAMC,EAAgC,IAAIC,IACpCC,EAA0B,IAAIC,IAC9BC,EAAsC,IAAIH,IAChDG,EAAoBC,IAAIP,EAAW,GACnC,IA9DiCQ,EA8D3BC,EAAQ,IAAIhC,GA9De+B,EA8DmB,SAACE,GAAE,OAAKA,EAAGC,MAAM,EA7D9D,SAACC,EAAGC,GAAC,OAAKL,EAAKK,GAAKL,EAAKI,EAAE,IA8DlCH,EAAMK,KAAK,CAAEC,GAAIf,EAAWW,OAAQ,IACpC,IADyC,IAAAK,EAAA,WAEvC,IAAAC,EAAuBR,EAAMb,MAArBmB,EAAEE,EAAFF,GAAIJ,EAAMM,EAANN,OACZ,IAAKP,EAAQc,IAAIH,GAAK,CACpB,IAAMI,EAAmBpB,EAAMgB,GAC/BX,EAAQgB,IAAIL,GACZI,EAAiBE,SAAQ,SAACC,EAAgBC,GACxC,IAAMC,EAAYb,EAASW,EACrBG,EAAYvB,EAAcwB,IAAIH,GAC9BI,EAAgBrB,EAAoBoB,IAAIH,SACxB,IAAlBI,GAA4BA,EAAgBH,IAAcG,EAAgBH,EAAY,YAAuB,IAAdC,GAAwBA,EAAYV,MACrIT,EAAoBC,IAAIgB,EAAUC,GAClCf,EAAMK,KAAK,CAAEC,GAAIQ,EAAUZ,OAAQa,IACnCtB,EAAcK,IAAIgB,EAAUR,GAEhC,GACF,CACF,EAhBON,EAAMmB,OAAS,GAACZ,IAiBvB,OAAOV,EAAoBY,IAAIjB,GAAWC,OAAgB,CAC5D,CASwB2B,CAAmB9B,EAAOC,EAAWC,GAC3D,OAAOC,EATT,SAAkCA,EAAeD,GAE/C,IADA,IAAM6B,EAAQ,GACLC,EAAO9B,OAAkB,IAAT8B,EAAiBA,EAAO7B,EAAcwB,IAAIK,GACjED,EAAMhB,KAAKiB,GAEb,OAAOD,EAAME,SACf,CAGyBC,CAAyB/B,EAAeD,QAAW,CAC5E,CASA,SAASiC,EAAgBC,EAAKC,EAAgBC,EAASC,GAGrD,OAFiBF,GAAkBD,EAAIjE,OAAS,GAAKmE,EAAU,EAAIC,EAAUH,EAAIjE,QACxDiE,EAAII,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAM9E,EAAM+E,EAAM,GAAE,EAE1E,CACA,SAASC,EAAKC,EAAQ1D,EAAGC,EAAGtB,EAAOgF,EAAiBP,EAASC,GAC3D,IAAMH,EAAMQ,EAAOE,MAAM5D,EAAGC,GACtB4D,EAAeZ,EAAgBC,EAAKvE,EAAOyE,EAASC,GAC1D,OAAOQ,EAAe,EAAIzE,KAAAC,IAACwE,EAAeF,EAAoB,GAAIT,EAAIjE,YAAS,CACjF,CA0BA,SAAS6E,EAAiBC,GAGvB,IAFDL,EAAMK,EAANL,OACAM,EAAaD,EAAbC,cAEQZ,EAAsEY,EAAtEZ,QAASC,EAA6DW,EAA7DX,QAASF,EAAoDa,EAApDb,eAAgBQ,EAAoCK,EAApCL,gBAAiBM,EAAmBD,EAAnBC,eACrDC,EAhDR,SAA4BC,GAIzB,IAHDT,EAAMS,EAANT,OACAC,EAAeQ,EAAfR,gBAIA,OAAO9E,EAHOsF,EAAdhB,eAG8BQ,EADbD,EAAOJ,QAAO,SAACC,EAAKC,GAAK,OAAKpE,KAAKgF,IAAI3F,EAAM+E,GAAQD,EAAI,GAAEjE,OAAO+E,YACvB,CAC9D,CAyC0BC,CAAoB,CAAEZ,OAAAA,EAAQP,eAAAA,EAAgBQ,gBAAAA,IAChEY,EA/BR,SAA4BC,GAMzB,IALDd,EAAMc,EAANd,OACAM,EAAaQ,EAAbR,cACAL,EAAea,EAAfb,gBACAO,EAAeM,EAAfN,gBACAD,EAAcO,EAAdP,eAEA,OAAO,SAACnB,GACN,IAAI2B,EAAIC,EACAvB,EAAqCa,EAArCb,eAAgBC,EAAqBY,EAArBZ,QAASC,EAAYW,EAAZX,QAC3BsB,EAA0B,IAAIzD,IACpCyD,EAAQrD,IAAIwB,EAAM,GAGlB,IAFA,IAAM8B,EAAmF,OAApEH,EAAuB,MAAlBR,OAAyB,EAASA,EAAeY,WAAqBJ,EAAK,EAC/FK,EAAY1F,KAAKgF,IAAIF,EAAsF,OAApEQ,EAAuB,MAAlBT,OAAyB,EAASA,EAAec,WAAqBL,EAAKM,KACpHhF,EAAI8C,EAAO8B,EAAa5E,EAAI0D,EAAOzE,OAAS,KAC/Ce,EAAI8C,EAAOgC,GADuC9E,GAAK,EAAG,CAG9D,IAAMiF,EAAcxB,EAAKC,EAAQZ,EAAM9C,EAAGmD,EAAgBQ,EAAiBP,EAASC,GACpF,QAAoB,IAAhB4B,EACF,MACFN,EAAQrD,IAAItB,EAAGiF,EACjB,CACA,OAAON,CACT,CACF,CAOuBO,CAAoB,CACvCxB,OAAAA,EACAM,cAAAA,EACAL,gBAAAA,EACAO,gBAAAA,EACAD,eAAAA,IAEIkB,EAAOtE,EAAiB0D,EAAc,EAAGb,EAAOzE,QACtD,QAAa,IAATkG,EAAJ,CAGA,IADA,IAAMC,EAAS,GAAGC,EAAA,WAEhB,IAAMnC,EAAMQ,EAAO4B,KAAI,SAAC9B,EAAO+B,GAAK,MAAM,CAAE/B,MAAAA,EAAO+B,MAAAA,EAAO,IAAG3B,MAAMuB,EAAKnF,EAAI,GAAImF,EAAKnF,IAC/EpB,EAASqE,EACbC,EAAIoC,KAAI,SAAAE,GAAQ,OAAAA,EAALhC,KAAiB,IAC5BL,EACAC,EACAC,GAEF+B,EAAOvD,KACLqB,EAAIoC,KAAI,SAAAG,EAAmBC,GAAU,IAA1BlC,EAAKiC,EAALjC,MAAO+B,EAAKE,EAALF,MAAK,MAAoB,CACzC/B,MAAAA,EACA4B,OAAQ,CACNxG,OAAAA,EACAD,MAAOC,EAASH,EAAM+E,GACtB+B,MAAAA,EACAG,WAAAA,EACAC,YAAazC,EAAIjE,QAEpB,IAEL,EApBSe,EAAI,EAAGA,EAAImF,EAAKlG,OAAQe,GAAK,EAACqF,IAqBvC,OAAOD,CAvBQ,CAwBjB,CACA,SAASQ,IAAiB,QAAAC,EAAA7G,UAAAC,OAAT6G,EAAO,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAPF,EAAOE,GAAAhH,UAAAgH,GACtB,MAAO,GAAAC,OAAIH,GAASI,QAAO,SAACC,GAAG,OAAKC,QAAQD,EAAI,IAAEE,KAAK,IACzD,CACA,SAASC,EAAUC,EAAIC,EAAAC,GAAgE,IAA5D9H,EAAK6H,EAAL7H,MAAOgH,EAAWa,EAAXb,YAAiBvC,EAAOqD,EAAPrD,QAASC,EAAOoD,EAAPpD,QAASF,EAAcsD,EAAdtD,eAC7DuD,EAAOtD,GAAWuC,EAAc,GAAK,EAAItC,EAAUsC,EACzD,MAAO,SAAPM,OAAgBM,EAAI,OAAAN,OAAMS,EAAI,UAAAT,OAASpH,GAAOsE,EAAiBuD,GAAQ/H,EAAO,GAAE,IAClF,CACA,SAASgI,EAAcvB,EAAQpB,GAC7B,MAAgC,SAAzBA,EAAcoB,OAAoB,eAAHa,OAAkB,EAAIjC,EAAcX,QAAO,OAAQiD,EAAU,OAAQlB,EAAQpB,EACrH,CACA,SAAS4C,EAAoBjE,EAAMyC,EAAQpB,GACzC,IAAIS,EAAIC,EACR,OAAO4B,EAA+E,OAApE5B,EAA0C,OAApCD,EAAK9B,EAAKkE,MAAM,sBAA2B,EAASpC,EAAG,IAAcC,EAAK/B,EAAMyC,EAAQpB,EAClH,CAiBA,SAAS8C,EAAcC,GACrB,IAAItC,EAAIC,EAgDcsC,EA9CpBxD,EAKEuD,EALFvD,MACA4B,EAIE2B,EAJF3B,OACApB,EAGE+C,EAHF/C,cAAaiD,EAGXF,EAFFG,WAAUC,OAAA,IAAAF,EAA4C,CAAC,EAACA,EAA1CG,EAAKD,EAALC,MAAOC,EAASF,EAATE,UAAcC,GAAcC,EAAAA,EAAAA,GAAAJ,EAAAhJ,GACjDqJ,EACET,EADFS,YAEMC,EAAYzD,EAAZyD,QACFC,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdC,QAAS,QACTC,UAAW,cACXlJ,MAAOgI,EAAcvB,EAAQpB,GAC7BpF,OAAQ,OACRkJ,YAAa,GAAF7B,OAAKzC,EAAM7E,MAAK,OAAAsH,OAAMzC,EAAM5E,SACpCoF,EAAcX,QAAU,CAAEA,QAAS,GAAF4C,OAAKjC,EAAcX,QAAO,OAAS,OAC1C,YAAzBW,EAAcoB,QAAiD,YAAzBpB,EAAcoB,SAAyBA,EAAOM,WAAaN,EAAOO,YAAc,EAAI,CAAEoC,aAAc,GAAF9B,OAAKjC,EAAcZ,QAAO,OAAS,MAC5KqE,EAAU,CAAEO,OAAQ,WAAc,MAClCZ,GAECa,EAAcR,EAAU,SAACS,GAC7BT,EAAQ,CAAES,MAAAA,EAAO1E,MAAAA,EAAO+B,MAAOH,EAAOG,OACxC,OAAI,EACE2B,GAAUS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdQ,IAAK3E,EAAM2E,IACXC,IAAyB,OAAnB3D,EAAKjB,EAAM4E,KAAe3D,EAAK,GACrC4D,MAAO7E,EAAM6E,MACbZ,QAASQ,EACTb,MAAOM,EACPL,UAAWzB,EAAK,2BAA4ByB,GAC5CiB,QAAS,OACTC,SAAU,SAhDd,SAAwB/E,EAAO4B,EAAQpB,GACrC,IAAIwE,EACAC,EACEC,EAASlF,EAAMgF,QAAUhF,EAAMkF,OAWrC,OAVIA,GAAUA,EAAOzJ,OAAS,IAC5BuJ,EAASE,EAAOzC,OACbyC,EAAOC,MAAK,SAAAC,GAAQ,OAAAA,EAALjK,QAAsB6E,EAAM7E,KAAK,IAAqE,GAAjE,CAAC,CAAEwJ,IAAK3E,EAAM2E,IAAKxJ,MAAO6E,EAAM7E,MAAOC,OAAQ4E,EAAM5E,UAC1GiK,MAAK,SAACC,EAAOC,GAAM,OAAKD,EAAMnK,MAAQoK,EAAOpK,KAAK,IAAE2G,KAAI,SAAC0D,GAAK,SAAA/C,OAAQ+C,EAAMb,IAAG,KAAAlC,OAAI+C,EAAMrK,MAAK,QAAK0H,KAAK,OAExGrC,EAAcyE,MAChBA,GAASzE,EAAcyE,MAAMA,OAAS,IAAInD,KAAI,SAAA2D,GAAA,IAAGC,EAAQD,EAARC,SAAUvG,EAAIsG,EAAJtG,KAAI,SAAAsD,OAAUiD,EAAQ,KAAAjD,OAAIW,EAAoBjE,EAAMyC,EAAQpB,GAAc,IAAIiC,OAAOW,EAAoB5C,EAAcyE,MAAM9F,KAAMyC,EAAQpB,IAAgBqC,KAAK,MAClNmC,IACTC,EAAQ,GAAHxC,OAAM7G,KAAK+J,KAAK/D,EAAOzG,MAAQqF,EAAcb,eAAiB,KAAI,OAElE,CAAEqF,OAAAA,EAAQC,MAAAA,EACnB,CAkCOW,CAAe5F,EAAO4B,EAAQpB,IAC9BsD,GAEC+B,EAAqB,SAACC,GAC1B,IAAQnB,EAA4DjB,EAA5DiB,IAAKC,EAAuDlB,EAAvDkB,IAAKI,EAAkDtB,EAAlDsB,OAAQC,EAA0CvB,EAA1CuB,MAAcc,EAA4BrC,EAAnCE,MAA0BoC,GAAIjC,EAAAA,EAAAA,GAAKL,EAAU9I,GAC9E,OAAOqL,EAAAA,cACL,OAAK9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEHS,IAAAA,GACGI,EAAS,CAAEA,OAAAA,EAAQC,MAAAA,GAAU,MAAI,IACpCN,IAAAA,EACAf,OAAmB,MAAXkC,OAAkB,EAASA,EAAQI,SAAW,CAAE9B,QAAS,QAASjJ,MAAO,OAAQC,OAAQ,QAAW2K,GACzGC,GAGT,EACMG,EAAgG,CACpG/B,SADoBZ,EAQlBU,GARqBE,QAEvBC,UAFyCb,EAATa,UAGhClJ,MAHgDqI,EAALrI,MAI3CmJ,YAJ6Dd,EAAXc,YAKlDzE,QALsE2D,EAAP3D,QAM/D0E,aANoFf,EAAZe,aAOxEC,OAP4FhB,EAANgB,QASxF,OAAOyB,EAAAA,cAAoBA,EAAAA,SAAgB,KAOpC,OAP2C/E,EAAoB,MAAf8C,OAAsB,EAASA,EAAY,CAChGhE,MAAAA,EACA4B,OAAAA,EACApB,cAAAA,EACAkD,WAAAA,EACAmC,mBAAAA,EACAM,aAAAA,KACYjF,EAAK2E,IACrB,CACA,SAASO,EAAyBC,GAG/B,IAFDC,EAAiBD,EAAjBC,kBACAC,EAAQF,EAARE,SAEA,OAAON,EAAAA,cAAoB,OAAK9B,EAAAA,EAAAA,GAAA,GAAOmC,GAAqBC,EAC9D,CACA,SAASC,EAAqBjD,GAC5B,IACE/C,EAME+C,EANF/C,cACAiG,EAKElD,EALFkD,SACAC,EAIEnD,EAJFmD,UACAC,EAGEpD,EAHFoD,mBAAkBC,EAGhBrD,EAFF+C,kBAAiBO,OAAA,IAAAD,EAAmD,CAAC,EAACA,EAAjDhD,EAAKiD,EAALjD,MAAOC,EAASgD,EAAThD,UAAciD,GAAqB/C,EAAAA,EAAAA,GAAA8C,EAAAhM,GAC/D0L,EACEhD,EADFgD,SAEID,GAAiBnC,EAAAA,EAAAA,GAAA,CACrBN,UAAWzB,EAAK,yBAA0ByB,GAC1CD,OAAKO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACHC,QAAS,OACT2C,cAAe,MACfC,SAAU,SACVC,WAAY,aACZC,eAAgB,iBACbT,EAAWC,EAAY,EAAI,CAAEnC,aAAc,GAAF9B,OAAKjC,EAAcZ,QAAO,OAAS,MAC5EgE,IAEFkD,GAEL,OAAOb,EAAAA,cAAoBA,EAAAA,SAAgB,MAA6B,MAAtBU,EAA6BA,EAAqBP,GAA2B,CAC7H5F,cAAAA,EACAiG,SAAAA,EACAC,UAAAA,EACAJ,kBAAAA,EACAC,SAAAA,IAEJ,CACA,SAASY,EAAW5D,GAClB,IACErD,EAKEqD,EALFrD,OACAM,EAIE+C,EAJF/C,cACAwD,EAGET,EAHFS,YACA2C,EAEEpD,EAFFoD,mBAAkBS,EAEhB7D,EADF8D,gBAAmB3D,EAAU0D,EAAV1D,WAAY4C,EAAiBc,EAAjBd,kBAE3BgB,EAAahH,EAAkB,CAAEJ,OAAAA,EAAQM,cAAAA,IAC/C,OAAK8G,EAEErB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMqB,EAAWxF,KAAI,SAACpC,EAAK+G,GAAQ,OAAKR,EAAAA,cACjFO,EACA,CACEjK,IAAK,OAAFkG,OAASgE,GACZjG,cAAAA,EACAiG,SAAAA,EACAC,UAAWY,EAAW7L,OACtBkL,mBAAAA,EACAL,kBAAAA,GAEF5G,EAAIoC,KAAI,SAAAyF,GAAA,IAAGvH,EAAKuH,EAALvH,MAAO4B,EAAM2F,EAAN3F,OAAM,OAAOqE,EAAAA,cAC7B3C,EACA,CACE/G,IAAKyD,EAAMzD,KAAOyD,EAAM2E,IACxB3E,MAAAA,EACA4B,OAAAA,EACApB,cAAAA,EACAwD,YAAAA,EACAN,WAAAA,GAEH,IACF,KAtBQ,IAuBX,CAqCA,SAAS8D,EAAwBlK,EAAOmK,EAAYlK,EAAWC,GAC7D,OATF,SAAiCkK,EAAQD,EAAYjK,GAEnD,IADA,IAAMmE,EAAO,CAACnE,GACL8B,EAAO9B,EAAS/B,EAASgM,EAAYhM,EAAS,EAAGA,GAAU,EAClE6D,EAAOoI,EAAOzI,IAAIK,GAAM7D,GAAQ6D,KAChCqC,EAAKtD,KAAKiB,GAEZ,OAAOqC,EAAKpC,SACd,CAESoI,CArCT,SAA6BrK,EAAOmK,EAAYlK,EAAWC,GACzD,IAAMkK,EAAyB,IAAIhK,IAC7BM,EAAwB,IAAIJ,IAClCI,EAAMW,IAAIpB,GACV,IADqB,IAAAqK,EAAA,SAAAnM,GAEnB,IAAMoM,GAAYC,EAAAA,EAAAA,GAAO9J,EAAM+J,QAC/B/J,EAAMgK,QACNH,EAAajJ,SAAQ,SAACU,GACpB,IAAM2I,EAAoBxM,EAAS,EAAIiM,EAAOzI,IAAIK,GAAM7D,GAAQyC,OAAS,EACzEZ,EAAMgC,GAAMV,SAAQ,SAAAsJ,GAA0B,IAAvBpJ,EAAQoJ,EAARpJ,SAAUZ,EAAMgK,EAANhK,OAC3BiK,EAAQT,EAAOzI,IAAIH,GAClBqJ,IACHA,EAAQ,GACRT,EAAO5J,IAAIgB,EAAUqJ,IAEvB,IAAMpJ,EAAYkJ,EAAoB/J,EAChCkK,EAAWD,EAAM1M,EAAS,KAC3B2M,GAAYA,EAASlK,OAASa,IAAcqJ,EAASlK,OAASa,EAAY,QAAUO,EAAO8I,EAAS9I,SACvG6I,EAAM1M,EAAS,GAAK,CAAE6D,KAAAA,EAAMpB,OAAQa,IAElCtD,EAASgM,EAAa,GAAK3I,IAAatB,GAC1CQ,EAAMW,IAAIG,EAEd,GACF,GACF,EArBSrD,EAAS,EAAGA,EAASgM,EAAYhM,GAAU,EAACmM,EAAAnM,GAsBrD,OAAOiM,CACT,CAUiCW,CAAoB/K,EAAOmK,EAAYlK,EAAWC,GAAUiK,EAAYjK,EACzG,CAsBA,SAAS8K,EAAiBC,GAWxB,IAHC,IAPD5G,EAAI4G,EAAJ5G,KACAzB,EAAMqI,EAANrI,OACAP,EAAc4I,EAAd5I,eACA6I,EAAWD,EAAXC,YACAC,EAAaF,EAAbE,cACA7I,EAAO2I,EAAP3I,QACAC,EAAO0I,EAAP1I,QAEM6I,EAAe,GACfC,EAAaF,EAAc3I,QAAO,SAAC8I,EAAOC,GAAW,OAAKD,EAAQC,CAAW,GAAE,GAAGC,EAAA,SAAAtM,GAEtF,IAAMuM,EAAS7I,EAAO4B,KAAI,SAAC9B,EAAO+B,GAAK,MAAM,CAAE/B,MAAAA,EAAO+B,MAAAA,EAAO,IAAG3B,MAAMuB,EAAKnF,GAAImF,EAAKnF,EAAI,IAClFwM,EAAoBP,EAAc3I,QACtC,SAAC8I,EAAOC,EAAa9G,GAAK,OAAK6G,GAASJ,EAAYhM,GAAKgM,EAAYzG,IAAU8G,CAAW,GAC1F,GAEII,GAAetJ,GAAkBgC,EAAKlG,OAAS,GAAKmE,EAAU,GAAK+B,EAAKlG,OAAS,GAAKoE,EAAUmJ,GAAqBP,EAAcjM,GAAKmM,EAC9ID,EAAarK,KACX0K,EAAOjH,KAAI,SAAAoH,EAAmBhH,GAAU,IAA1BlC,EAAKkJ,EAALlJ,MAAO+B,EAAKmH,EAALnH,MAAK,MAAoB,CAC5C/B,MAAAA,EACA4B,OAAQ,CACNzG,MAAO8N,EACP7N,OAAQ6N,EAAchO,EAAM+E,GAC5B+B,MAAAA,EACAG,WAAAA,EACAC,YAAa4G,EAAOtN,QAEvB,IAEL,EAnBSe,EAAI,EAAGA,EAAImF,EAAKlG,OAAS,EAAGe,GAAK,EAACsM,EAAAtM,GAoB3C,OAAOkM,CACT,CACA,SAASS,EAAmBC,GAIzB,IAHDlJ,EAAMkJ,EAANlJ,OACAM,EAAa4I,EAAb5I,cACA6I,EAAiBD,EAAjBC,kBAEQC,EAA8C9I,EAA9C8I,QAAS1J,EAAqCY,EAArCZ,QAASC,EAA4BW,EAA5BX,QAASF,EAAmBa,EAAnBb,eAC7B6I,EAAc,GACdC,EAAgB,GACtB,GAAIvI,EAAOzE,QAAU6N,EAAS,CAE5B,IADA,IAAMC,EAAerJ,EAAOzE,OAAS,EAAIyE,EAAOJ,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAM9E,EAAM+E,EAAM,GAAE,GAAKE,EAAOzE,OAAS,EACvGe,EAAI,EAAGA,EAAI8M,EAAS9M,GAAK,EAChCgM,EAAYhM,GAAK,EAAIqD,EACrB4I,EAAcjM,GAAKA,EAAI0D,EAAOzE,OAASR,EAAMiF,EAAO1D,IAAM+M,EAW5D,MAAO,CAAEf,YAAAA,EAAaC,cAAAA,EAAeC,aATfJ,EAAkB,CACtC3G,KAAMY,MAAMiH,KAAK,CAAE/N,OAAQ6N,EAAU,IAAKxH,KAAI,SAAC2H,EAAG1H,GAAK,OAAKnG,KAAKgF,IAAImB,EAAO7B,EAAOzE,OAAO,IAC1FyE,OAAAA,EACAuI,cAAAA,EACAD,YAAAA,EACA7I,eAAAA,EACAC,QAAAA,EACAC,QAAAA,IAGJ,CAUA,IATA,IAAM6J,GAAsBxJ,EAAOJ,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAMsJ,EAAoBpO,EAAM+E,EAAM,GAAE,GAAKJ,GAAWM,EAAOzE,OAAS6N,GAAW,EAAIzJ,EAAUK,EAAOzE,QAAU6N,EACtKvI,EAhFR,SAA+B4I,GAM5B,IALDzJ,EAAMyJ,EAANzJ,OACAN,EAAO+J,EAAP/J,QACAC,EAAO8J,EAAP9J,QACAwJ,EAAiBM,EAAjBN,kBACAK,EAAkBC,EAAlBD,mBAEA,OAAO,SAACpK,GAIN,IAHA,IAAM6B,EAAU,GACVyI,EAAoC,IAArBF,EACjBtO,EAASiO,EAAoBpO,EAAMiF,EAAOZ,IAAS,EAAIO,EAClDrD,EAAI8C,EAAO,EAAG9C,EAAI0D,EAAOzE,OAAS,IACzC0F,EAAQ9C,KAAK,CAAES,SAAUtC,EAAG0B,OAAMtC,KAAAC,IAAG6N,EAAqBtO,EAAW,OACjEA,EAASwO,GAAgBpN,IAAM0D,EAAOzE,SAFEe,GAAK,EAKjDpB,GAAUiO,EAAoBpO,EAAMiF,EAAO1D,IAAMoD,EAAU,EAAIC,EAEjE,OAAOsB,CACT,CACF,CA4DuB0I,CAAuB,CAC1C3J,OAAAA,EACAmJ,kBAAAA,EACAK,mBAAAA,EACA9J,QAAAA,EACAC,QAAAA,IAEI8B,EAAO6F,EAAwBzG,EAAcuI,EAAS,EAAGpJ,EAAOzE,QAC7De,EAAI,EAAGA,EAAImF,EAAKlG,OAAS,EAAGe,GAAK,EAAG,CAC3C,IAAMuM,EAAS7I,EAAOE,MAAMuB,EAAKnF,GAAImF,EAAKnF,EAAI,IAC9CgM,EAAYhM,GAAKoD,GAAWmJ,EAAOtN,OAAS,GAAK,EAAIoE,EAAUkJ,EAAOtN,OACtEgN,EAAcjM,GAAK,EAAIuM,EAAOjJ,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAM,EAAI9E,EAAM+E,EAAM,GAAE,EAC/E,CAUA,MAAO,CAAEwI,YAAAA,EAAaC,cAAAA,EAAeC,aAThBJ,EAAkB,CACrC3G,KAAAA,EACAzB,OAAAA,EACAuI,cAAAA,EACAD,YAAAA,EACA7I,eAAAA,EACAC,QAAAA,EACAC,QAAAA,IAGJ,CACA,SAASiK,EAAcvG,GACrB,IAAQrD,EAA0BqD,EAA1BrD,OAAQM,EAAkB+C,EAAlB/C,cACR8I,EAA8C9I,EAA9C8I,QAAS1J,EAAqCY,EAArCZ,QAASC,EAA4BW,EAA5BX,QAE1BkK,EAAqDZ,EAAoB,CACvEjJ,OAAAA,EACAM,cAAAA,EACA6I,mBALoD7I,EAAnBb,eACSC,GAAW0J,EAAU,GAAK,EAAIzJ,EAAUyJ,GAAWA,IACvFd,EAAWuB,EAAXvB,YAAaC,EAAasB,EAAbtB,cAAeC,EAAYqB,EAAZrB,aAKpC,OAAIA,EAAasB,WACf,SAACC,GAAW,OAAKA,EAAYD,WAAU,SAAAE,GAAA,IAAAC,EAAAD,EAAGtI,OAAUzG,EAAKgP,EAALhP,MAAOC,EAAM+O,EAAN/O,OAAM,OAASD,EAAQ,GAAKC,EAAS,CAAC,KAAK,CAAC,KACpG,EACCkO,EAAU,EACLQ,EAAc,CAAE5J,OAAAA,EAAQM,eAAa2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3D,GAAa,IAAE8I,QAASA,EAAU,WAEvF,EAEK,CAAEZ,aAAAA,EAAcF,YAAAA,EAAaC,cAAAA,EACtC,CACA,SAAS2B,EAAoBC,GAI3B,OAAOP,EAAc,CAAE5J,OAHjBmK,EAANnK,OAG+BM,cAFlB6J,EAAb7J,eAGF,CACA,SAAS8J,EAA4BC,GAGlC,IAFDC,EAAoBD,EAApBC,qBACAjE,EAAQgE,EAARhE,SAEA,OAAON,EAAAA,cAAoB,OAAK9B,EAAAA,EAAAA,GAAA,GAAOqG,GAAwBjE,EACjE,CACA,SAASkE,EAAelH,GACtB,IAAQ/C,EAAyE+C,EAAzE/C,cAAekK,EAA0DnH,EAA1DmH,YAAaC,EAA6CpH,EAA7CoH,aAAcnC,EAA+BjF,EAA/BiF,YAAaC,EAAkBlF,EAAlBkF,cACvD7G,EAA6BpB,EAA7BoB,OAAQhC,EAAqBY,EAArBZ,QAASC,EAAYW,EAAZX,QACzB,GAAe,YAAX+B,IAAyB4G,IAAgBC,EAC3C,MAAO,gBAAPhG,OAAuB7C,GAAW+K,EAAe,GAAE,UAAAlI,OAASkI,EAAY,KAE1E,IAAMhC,EAAaF,EAAc3I,QAAO,SAACC,EAAK6K,GAAM,OAAK7K,EAAM6K,CAAM,GAAE,GACjE5B,EAAoBP,EAAc3I,QACtC,SAACC,EAAK6K,EAAQ7I,GAAK,OAAKhC,GAAOyI,EAAYkC,GAAelC,EAAYzG,IAAU6I,CAAM,GACtF,GAEF,MAAO,gBAAPnI,OAAuBpH,GACpBsP,EAAe,GAAK/K,EAAU,EAAI+K,EAAe9K,EAAUmJ,EAC5D,GACD,UAAAvG,OAASpH,EAAMoN,EAAciC,GAAe/B,EAAY,GAAE,OAAAlG,OAAM,EAAI5C,EAAO,MAC9E,CACA,SAASgL,EAAwBtH,GAC/B,IACE/C,EAKE+C,EALF/C,cACAsK,EAIEvH,EAJFuH,sBACAvE,EAGEhD,EAHFgD,SAAQwE,EAGNxH,EAFFiH,qBAAoBQ,OAAA,IAAAD,EAAsD,CAAC,EAACA,EAApDnH,EAAKoH,EAALpH,MAAOC,EAASmH,EAATnH,UAAcoH,GAAwBlH,EAAAA,EAAAA,GAAAiH,EAAAlQ,GAClEkL,GAAIjC,EAAAA,EAAAA,GACLR,EAAKxI,GACHyP,GAAoBrG,EAAAA,EAAAA,GAAA,CACxBN,UAAWzB,EAAK,4BAA6ByB,GAC7CD,OAAKO,EAAAA,EAAAA,GAAA,CACHC,QAAS,OACT2C,cAAe,SACfC,SAAU,SACVC,WAAY,aACZ9L,MAAOsP,EAAelH,GACtB2D,eAAyC,YAAzB1G,EAAcoB,OAAuB,gBAAkB,cACpEgC,IAEFqH,GAEL,OAAOhF,EAAAA,cAAoBA,EAAAA,SAAgB,MAAgC,MAAzB6E,EAAgCA,EAAwBR,IAA4BnG,EAAAA,EAAAA,GAAA,CACpI3D,cAAAA,EACAgK,qBAAAA,EACAjE,SAAAA,GACGP,IAEP,CACA,SAASkF,EAAc3H,GACrB,IACErD,EAKEqD,EALFrD,OACAM,EAIE+C,EAJF/C,cACAwD,EAGET,EAHFS,YACA8G,EAEEvH,EAFFuH,sBAAqBK,EAEnB5H,EADF8D,gBAAmB3D,EAAUyH,EAAVzH,WAAY8G,EAAoBW,EAApBX,qBAE3BY,EAAgBhB,EAAqB,CAAElK,OAAAA,EAAQM,cAAAA,IACrD,IAAK4K,EACH,OAAO,KACT,IAAQ1C,EAA6C0C,EAA7C1C,aAAcD,EAA+B2C,EAA/B3C,cAAeD,EAAgB4C,EAAhB5C,YACrC,OAAOvC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMyC,EAAa5G,KAAI,SAACiH,EAAQ2B,GAAW,OAAKzE,EAAAA,cACzF4E,EACA,CACEtO,IAAK,UAAFkG,OAAYiI,GACflK,cAAAA,EACAkK,YAAAA,EACAC,aAAcjC,EAAajN,OAC3B+M,YAAAA,EACAC,cAAAA,EACAqC,sBAAAA,EACAN,qBAAAA,GAEFzB,EAAOjH,KAAI,SAAAuJ,GAAA,IAAGrL,EAAKqL,EAALrL,MAAO4B,EAAMyJ,EAANzJ,OAAM,OAAOqE,EAAAA,cAChC3C,EACA,CACE/G,IAAKyD,EAAMzD,KAAOyD,EAAM2E,IACxB3E,MAAAA,EACA4B,OAAAA,EACApB,cAAAA,EACAwD,YAAAA,EACAN,WAAAA,GAEH,IACF,IACH,CACA,SAAS4H,EAAqB/H,GAC5B,IAAQrD,EAA0BqD,EAA1BrD,OAAQM,EAAkB+C,EAAlB/C,cACR8I,EAA8C9I,EAA9C8I,QAAS1J,EAAqCY,EAArCZ,QAASC,EAA4BW,EAA5BX,QACpBoJ,GADgDzI,EAAnBb,eACGC,GAAW0J,EAAU,GAAK,EAAIzJ,EAAUyJ,GAAWA,EACzF,GAAIL,GAAe,EACjB,OAAOK,EAAU,EAAIgC,GAAoBnH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACtCZ,GAAK,IACR/C,eAAa2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3D,GAAa,IAAE8I,QAASA,EAAU,YACnD,EAGP,IADA,IAAMiC,EAA6B,GAC1B/O,EAAI,EAAGA,EAAI8M,EAAS9M,GAAK,EAChC+O,EAA2B/O,GAAK,EAElC,IAAMkM,EAAexI,EAAOJ,QAC1B,SAAC0L,EAAOxL,EAAO+B,GACb,IAAM0J,EAAiBF,EAA2BzL,QAChD,SAAC4L,EAAuBC,EAAMnP,GAAC,OAAKmP,EAAOJ,EAA2BG,GAAyB,EAAIlP,EAAIkP,CAAqB,GAC5H,GAIF,OAFAH,EAA2BE,GAAkBF,EAA2BE,GAAkBxC,EAAchO,EAAM+E,GAASJ,EAAU,EAAIC,EACrI2L,EAAMC,GAAgBpN,KAAK,CAAE2B,MAAAA,EAAO+B,MAAAA,IAC7ByJ,CACT,GACAjJ,MAAMiH,KAAK,CAAE/N,OAAQ6N,IAAWxH,KAAI,iBAAM,EAAE,KAE9C,OAAO4G,EAAa5G,KAClB,SAACiH,GAAM,OAAKA,EAAOjH,KAAI,SAAA8J,EAAmB1J,GAAU,IAA1BlC,EAAK4L,EAAL5L,MAAO+B,EAAK6J,EAAL7J,MAAK,MAAoB,CACxD/B,MAAAA,EACA4B,OAAQ,CACNzG,MAAO8N,EACP7N,OAAQ6N,EAAchO,EAAM+E,GAC5B+B,MAAAA,EACAG,WAAAA,EACAC,YAAa4G,EAAOtN,QAEvB,GAAE,GAEP,CACA,SAASoQ,EAActI,GACrB,IACErD,EAKEqD,EALFrD,OACAM,EAIE+C,EAJF/C,cACAwD,EAGET,EAHFS,YACA8G,EAEEvH,EAFFuH,sBAAqBgB,EAEnBvI,EADF8D,gBAAmB3D,EAAUoI,EAAVpI,WAAY8G,EAAoBsB,EAApBtB,qBAE3BuB,EAAgBT,EAAqB,CAAEpL,OAAAA,EAAQM,cAAAA,IACrD,OAAKuL,EAEE9F,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM8F,EAAcjK,KAAI,SAACiH,EAAQ2B,GAAW,OAAKzE,EAAAA,cAC1F4E,EACA,CACEtO,IAAK,kBAAFkG,OAAoBiI,GACvBlK,cAAAA,EACAmK,aAAcoB,EAActQ,OAC5BiP,YAAAA,EACAI,sBAAAA,EACAN,qBAAAA,GAEFzB,EAAOjH,KAAI,SAAAkK,GAAA,IAAGhM,EAAKgM,EAALhM,MAAO4B,EAAMoK,EAANpK,OAAM,OAAOqE,EAAAA,cAChC3C,EACA,CACE/G,IAAKyD,EAAMzD,KAAOyD,EAAM2E,IACxB3E,MAAAA,EACA4B,OAAAA,EACApB,cAAAA,EACAwD,YAAAA,EACAN,WAAAA,GAEH,IACF,KAtBQ,IAuBX,CACA,SAASuI,EAAsBC,GAA6C,IAA1CC,EAAcD,EAAdC,eAAgB5F,EAAQ2F,EAAR3F,SAAU6F,EAAYF,EAAZE,aAC1D,OAAOnG,EAAAA,cAAoB,OAAK9B,EAAAA,EAAAA,GAAA,CAAIkI,IAAKD,GAAiBD,GAAkB5F,EAC9E,CACA,SAAS+F,EAAkB/I,GACzB,IACE3B,EAKE2B,EALF3B,OACA2K,EAIEhJ,EAJFgJ,gBACAhG,EAGEhD,EAHFgD,SACA6F,EAEE7I,EAFF6I,aAAYI,EAEVjJ,EADF4I,eAAcM,OAAA,IAAAD,EAAgD,CAAC,EAACA,EAA9C5I,EAAK6I,EAAL7I,MAAOC,EAAS4I,EAAT5I,UAAc6I,GAAkB3I,EAAAA,EAAAA,GAAA0I,EAAAzR,GAErDmR,GAAchI,EAAAA,EAAAA,GAAA,CAClBN,UAAWzB,EAAK,oBAAqB,sBAAFK,OAAwBb,GAAUiC,GACrED,OAAKO,EAAAA,EAAAA,GAAA,CACHC,QAAS,OACT4C,SAAU,SACVE,eAAgB,gBAChBH,cAA0B,SAAXnF,EAAoB,SAAW,OAC3CgC,IAEF8I,GAEL,OAAOzG,EAAAA,cAAoBA,EAAAA,SAAgB,MAA0B,MAAnBsG,EAA0BA,EAAkBN,GAAwB,CACpHE,eAAAA,EACAC,aAAAA,EACAxK,OAAAA,EACA2E,SAAAA,IAEJ,CAQA,SAASoG,EAAsBC,EAAKC,GAA4C,IAAxCC,EAAiBD,EAAjBC,kBAAmBC,EAAiBF,EAAjBE,kBACjDpN,EAAmCiN,EAAnCjN,eAAgBqN,EAAmBJ,EAAnBI,eACxB,YAAuB,IAAnBrN,QAAgD,IAAnBqN,QAAmD,IAAtBF,QAAsD,IAAtBC,GAAgCD,EAAoBnN,GAAkBmN,EAAoBnN,GAAkB,IAAMoN,EAAoBC,EAC3N,CAAErN,eAAAA,EAAgBqN,eAAgBD,GAEpCpN,IAAmBmN,GAAqBE,IAAmBD,EAAoB,CAAEpN,eAAgBmN,EAAmBE,eAAgBD,GAAsBH,CACnK,CACA,SAASK,EAAsBhP,EAAIiP,GACjC,IAAI/R,EAAc,MAAN8C,OAAa,EAASA,EAAGkP,YACrC,QAAc,IAAVhS,GAAoB+R,GAAgBA,EAAazR,OAAS,EAAG,CAC/D,IAAM2R,GAAStF,EAAAA,EAAAA,GAAIoF,EAAaxK,QAAO,SAAC2K,GAAC,OAAKA,EAAI,CAAC,KAAGhI,MAAK,SAAClH,EAAGC,GAAC,OAAKA,EAAID,CAAC,IAC1EiP,EAAO/O,KAAKzC,KAAKiB,MAAMuQ,EAAOA,EAAO3R,OAAS,GAAK,IACnD,IAAM6R,EAAYnS,EAClBA,EAAQiS,EAAOjI,MAAK,SAACoI,EAAYxL,GAAK,OAAKwL,GAAcD,GAAavL,IAAUqL,EAAO3R,OAAS,CAAC,GACnG,CACA,OAAON,CACT,CA2BA,IAAMqS,EAAcC,OAAOC,OAAO,CAAC,KAAM,IAAK,IAAK,IACnD,SAASC,EAAOrS,EAAOsS,GACrB,MAAwB,oBAAVtS,EAAuBA,EAAMsS,GAAOtS,CACpD,CACA,SAASuS,EAAgBvS,EAAOqE,GAC9B,MAAwB,qBAAVrE,EAAwBqS,EAAOrS,EAAOqE,QAAkB,CACxE,CAKA,SAASmO,EAA2BC,EAAWpO,EAAgBqO,GAAsB,IAAdC,EAAQzS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC1EF,EAAQuS,EAAgBE,EAAWpO,GACzC,OAAO/D,KAAKP,MAAMO,KAAKsB,SAAc,IAAV5B,EAN7B,SAA+B0S,EAAQrO,GACrC,IAAMoC,EAAQyL,EAAYxD,WAAU,SAACuD,GAAU,OAAKA,GAAc5N,CAAc,IAChF,OAAOgO,EAAOK,EAAOjM,GAAS,EAAIA,EAAQ,GAAIpC,EAChD,CAGgDuO,CAAsBF,EAAQrO,GAAkBrE,EAAO2S,GACvG,CAoFA,SAASE,EAAW5K,GAClB,IAAQrD,EAAsFqD,EAAtFrD,OAAQ0B,EAA8E2B,EAA9E3B,OAAQ2K,EAAsEhJ,EAAtEgJ,gBAAiB6B,EAAqD7K,EAArD6K,sBACzCC,EA9HF,SAA2BnB,EAAckB,GACvC,IAAAE,EAAuCrI,EAAAA,WAAiB0G,EAAuB,CAC7EhN,eAAgByO,IAChBG,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAFO3O,EAAc4O,EAAA,GAAd5O,eAAkB8O,EAAQF,EAAA,GAG7BlC,EAAMpG,EAAAA,OAAa,MACnByI,EAAczI,EAAAA,SAmBpB,MAAO,CAAEmG,aAlBYnG,EAAAA,aACnB,SAAC3G,GACC,IAAI2B,EAC0B,OAA7BA,EAAKyN,EAAYC,UAA4B1N,EAAG2N,aACjDF,EAAYC,aAAU,EACtBtC,EAAIsC,QAAUrP,EACd,IAAMuP,EAAc,WAAH,OAASJ,EAAS,CACjC3B,kBAAmBG,EAAsBZ,EAAIsC,QAASzB,GACtDH,kBAAmB+B,OAAOC,WAAaC,SAASC,gBAAgB9B,aAChE,EACF0B,IACIvP,GAAkC,qBAAnB4P,iBACjBR,EAAYC,QAAU,IAAIO,eAAeL,GACzCH,EAAYC,QAAQQ,QAAQ7P,GAEhC,GACA,CAAC4N,IAEoBvN,eAAAA,EACzB,CAqG2CyP,CAtJ3C,SAAkBC,GAChB,IAAMhD,EAAMpG,EAAAA,OAAaoJ,GAIzB,OAHKA,GAAUhD,EAAIsC,SAAWU,EAAMxM,SAAWwJ,EAAIsC,QAAQ9L,SACzDwJ,EAAIsC,QAAUU,GAEThD,EAAIsC,OACb,CAgJ6DW,CADmC/L,EAA9BiK,aACmBY,GAA3EhC,EAAYiC,EAAZjC,aAAczM,EAAc0O,EAAd1O,eACtB,IAAKiC,IAAW,CAAC,OAAQ,UAAW,WAAW2N,SAAS3N,KAAYW,MAAMiN,QAAQtP,GAChF,OAAO,KACT,IAAMM,EAAgBb,EAxFxB,SAA6B8P,GAU1B,IATD7N,EAAM6N,EAAN7N,OACAqC,EAAOwL,EAAPxL,QACAtE,EAAc8P,EAAd9P,eACAQ,EAAesP,EAAftP,gBACAM,EAAcgP,EAAdhP,eACA6I,EAAOmG,EAAPnG,QACA1J,EAAO6P,EAAP7P,QACAC,EAAO4P,EAAP5P,QACAoF,EAAKwK,EAALxK,MAEA,MAAO,CACLrD,OAAAA,EACAqC,QAAAA,EACAtE,eAAAA,EACA2J,QAASwE,EAA2BxE,EAAS3J,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,GAC3EC,QAASkO,EAA2BlO,EAASD,EAAgB,CAAC,GAAI,GAAI,GAAI,IAC1EE,QAASiO,EAA2BjO,EAASF,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,IAC1EQ,gBAAiB2N,EAA2B3N,EAAiBR,EAAgB,CAC3E,SAAC+P,GAAC,OAAKA,EAAI,CAAC,EACZ,SAACA,GAAC,OAAKA,EAAI,CAAC,EACZ,SAACA,GAAC,OAAKA,EAAI,CAAC,EACZ,SAACA,GAAC,OAAKA,EAAI,CAAC,IAEdjP,eAAgBoN,EAAgBpN,EAAgBd,GAChDsF,MAAAA,EAEJ,CA6DyC0K,EAAoBxL,EAAAA,EAAAA,GAAC,CAAExE,eAAAA,GAAmB4D,SAAW,EACtF8D,EA7DR,SAAgC9D,EAAO5D,EAAgBa,GACrD,IAAQN,EAAiDqD,EAAjDrD,OACFmH,EAAkBsG,EADiCpK,EAAzC8D,gBACoC1H,IAAmB,CAAC,EACxE,GAAIa,EAAe,CACjB,IAAQoB,EAA6CpB,EAA7CoB,OAAQhC,EAAqCY,EAArCZ,QAASC,EAA4BW,EAA5BX,QAASY,EAAmBD,EAAnBC,eAClC,GAAe,SAAXmB,EAAmB,CACrB,IAAQgO,GAAuBnP,GAAkB,CAAC,GAA1CmP,mBACR,GAAIA,EAAoB,CACtB,IAAMC,EAAWjU,KAAKiB,MACpBqD,EAAOJ,QACL,SAACC,EAAG+P,GAAiB,OAAO/P,EAAf+P,EAAL3U,MAAa2U,EAAN1U,OAAoCwU,EAAqB,EAAI/P,CAAO,GACnFA,EAAUK,EAAOzE,OAAS,EAAImE,GAAWM,EAAOzE,OAAS,KAGzDoU,EAAW,IACbxI,EAAgB8E,eAAiB9E,EAAgB8E,gBAAkB,CAAC,EACpE9E,EAAgB8E,eAAevI,OAAKO,EAAAA,EAAAA,GAAA,CAAK0L,SAAAA,GAAaxI,EAAgB8E,eAAevI,OAEzF,CACF,CACF,CACA,OAAOyD,CACT,CAuC0B0I,CAAuBxM,EAAO5D,EAAgBa,GACtE,OAAOyF,EAAAA,cACLqG,EACA,CACE1K,OAAAA,EACAwK,aAAAA,EACAG,gBAAAA,EACAJ,eAAgB9E,EAAgB8E,gBAElC3L,GA/CJ,SAAsB+C,EAAO8D,EAAiB7G,GAC5C,IAAQN,EAA2EqD,EAA3ErD,OAAQ0B,EAAmE2B,EAAnE3B,OAAQoC,EAA2DT,EAA3DS,YAAa2C,EAA8CpD,EAA9CoD,mBAAoBmE,EAA0BvH,EAA1BuH,sBACnDkF,EAAoB,CAAE9P,OAAAA,EAAQ8D,YAAAA,EAAaqD,gBAAAA,GACjD,MAAe,SAAXzF,EACKqE,EAAAA,cACLkB,GAAUhD,EAAAA,EAAAA,GAAA,CAER3D,cAAAA,EACAmG,mBAAAA,GACGqJ,IAIM,YAAXpO,EACKqE,EAAAA,cACLiF,GAAa/G,EAAAA,EAAAA,GAAA,CAEX3D,cAAAA,EACAsK,sBAAAA,GACGkF,IAIF/J,EAAAA,cACL4F,GAAa1H,EAAAA,EAAAA,GAAA,CAEX3D,cAAAA,EACAsK,sBAAAA,GACGkF,GAGT,CAgBqBC,CAAa1M,EAAO8D,EAAiB7G,GAE1D,C","sources":["../node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nfunction ratio({ width, height }) {\n  return width / height;\n}\nfunction round(value, decimals = 0) {\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1))\n        k2 += 1;\n      if (!this.greater(k, k2))\n        break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0)\n      return void 0;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = /* @__PURE__ */ new Map();\n  const visited = /* @__PURE__ */ new Set();\n  const storedShortestPaths = /* @__PURE__ */ new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n  queue.push({ id: startNode, weight: 0 });\n  while (queue.size() > 0) {\n    const { id, weight } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === void 0 || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== void 0 && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({ id: neighbor, weight: newWeight });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : void 0;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== void 0; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : void 0;\n}\nfunction findIdealNodeSearch({\n  photos,\n  targetRowHeight,\n  containerWidth\n}) {\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : void 0;\n}\nfunction makeGetRowNeighbors({\n  photos,\n  layoutOptions,\n  targetRowHeight,\n  limitNodeSearch,\n  rowConstraints\n}) {\n  return (node) => {\n    var _a, _b;\n    const { containerWidth, spacing, padding } = layoutOptions;\n    const results = /* @__PURE__ */ new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints == null ? void 0 : rowConstraints.minPhotos) != null ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints == null ? void 0 : rowConstraints.maxPhotos) != null ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset)\n        break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === void 0)\n        break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout({\n  photos,\n  layoutOptions\n}) {\n  const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === void 0)\n    return void 0;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(\n      row.map(({ photo }) => photo),\n      containerWidth,\n      spacing,\n      padding\n    );\n    layout.push(\n      row.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      }))\n    );\n  }\n  return layout;\n}\nfunction clsx(...classes) {\n  return [...classes].filter((cls) => Boolean(cls)).join(\" \");\n}\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) == null ? void 0 : _a[1]) != null ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(\n      !images.find(({ width }) => width === photo.width) ? [{ src: photo.src, width: photo.width, height: photo.height }] : []\n    ).sort((first, second) => first.width - second.width).map((image) => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: { style, className, ...restImageProps } = {},\n    renderPhoto\n  } = props;\n  const { onClick } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null,\n    ...(layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n    ...onClick ? { cursor: \"pointer\" } : null,\n    ...style\n  };\n  const handleClick = onClick ? (event) => {\n    onClick({ event, photo, index: layout.index });\n  } : void 0;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) != null ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: clsx(\"react-photo-album--photo\", className),\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = (options) => {\n    const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n    return React.createElement(\n      \"img\",\n      {\n        alt,\n        ...srcSet ? { srcSet, sizes } : null,\n        src,\n        style: (options == null ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle,\n        ...rest\n      }\n    );\n  };\n  const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n    display,\n    boxSizing,\n    width,\n    aspectRatio,\n    padding,\n    marginBottom,\n    cursor\n  }))(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto == null ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) != null ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer({\n  rowContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: { style, className, ...restRowContainerProps } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: clsx(\"react-photo-album--row\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null,\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer != null ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps: { imageProps, rowContainerProps }\n  } = props;\n  const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n  if (!rowsLayout)\n    return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(\n    RowContainerRenderer,\n    {\n      key: `row-${rowIndex}`,\n      layoutOptions,\n      rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer,\n      rowContainerProps\n    },\n    row.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = /* @__PURE__ */ new Map();\n  const queue = /* @__PURE__ */ new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach((node) => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(({ neighbor, weight }) => {\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = { node, weight: newWeight };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors({\n  photos,\n  spacing,\n  padding,\n  targetColumnWidth,\n  targetColumnHeight\n}) {\n  return (node) => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel({\n  path,\n  photos,\n  containerWidth,\n  columnsGaps,\n  columnsRatios,\n  spacing,\n  padding\n}) {\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce(\n      (total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio,\n      0\n    );\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(\n      column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      }))\n    );\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel({\n  photos,\n  layoutOptions,\n  targetColumnWidth\n}) {\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel2 = buildColumnsModel({\n      path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return { columnsGaps, columnsRatios, columnsModel: columnsModel2 };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(\n    (columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0\n  ) >= 0) {\n    if (columns > 1) {\n      return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n    }\n    return void 0;\n  }\n  return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({\n  photos,\n  layoutOptions\n}) {\n  return computeLayout({ photos, layoutOptions });\n}\nfunction defaultRenderColumnContainer({\n  columnContainerProps,\n  children\n}) {\n  return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n  const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n  const { layout, spacing, padding } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio2) => acc + ratio2, 0);\n  const totalAdjustedGaps = columnsRatios.reduce(\n    (acc, ratio2, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio2,\n    0\n  );\n  return `calc((100% - ${round(\n    (columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps,\n    3\n  )}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: { style, className, ...restColumnContainerProps } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: clsx(\"react-photo-album--column\", className),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer != null ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n  if (!columnsLayout)\n    return null;\n  const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `column-${columnIndex}`,\n      layoutOptions,\n      columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps,\n      columnsRatios,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction computeMasonryLayout(props) {\n  const { photos, layoutOptions } = props;\n  const { columns, spacing, padding, containerWidth } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: { ...layoutOptions, columns: columns - 1 }\n    }) : void 0;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce(\n    (model, photo, index) => {\n      const shortestColumn = columnsCurrentTopPositions.reduce(\n        (currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn,\n        0\n      );\n      columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n      model[shortestColumn].push({ photo, index });\n      return model;\n    },\n    Array.from({ length: columns }).map(() => [])\n  );\n  return columnsModel.map(\n    (column) => column.map(({ photo, index }, photoIndex) => ({\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    }))\n  );\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps: { imageProps, columnContainerProps }\n  } = props;\n  const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n  if (!masonryLayout)\n    return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(\n    ColumnContainerRenderer,\n    {\n      key: `masonry-column-${columnIndex}`,\n      layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex,\n      renderColumnContainer,\n      columnContainerProps\n    },\n    column.map(({ photo, layout }) => React.createElement(\n      PhotoRenderer,\n      {\n        key: photo.key || photo.src,\n        photo,\n        layout,\n        layoutOptions,\n        renderPhoto,\n        imageProps\n      }\n    ))\n  )));\n}\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n  return React.createElement(\"div\", { ref: containerRef, ...containerProps }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: { style, className, ...restContainerProps } = {}\n  } = props;\n  const containerProps = {\n    className: clsx(\"react-photo-album\", `react-photo-album--${layout}`, className),\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer != null ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n  const { containerWidth, scrollbarWidth } = state;\n  if (containerWidth !== void 0 && scrollbarWidth !== void 0 && newContainerWidth !== void 0 && newScrollbarWidth !== void 0 && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return { containerWidth, scrollbarWidth: newScrollbarWidth };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth } : state;\n}\nfunction resolveContainerWidth(el, breakpoints2) {\n  let width = el == null ? void 0 : el.clientWidth;\n  if (width !== void 0 && breakpoints2 && breakpoints2.length > 0) {\n    const sorted = [...breakpoints2.filter((x) => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints2, defaultContainerWidth) {\n  const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(\n    (node) => {\n      var _a;\n      (_a = observerRef.current) == null ? void 0 : _a.disconnect();\n      observerRef.current = void 0;\n      ref.current = node;\n      const updateWidth = () => dispatch({\n        newContainerWidth: resolveContainerWidth(ref.current, breakpoints2),\n        newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n      });\n      updateWidth();\n      if (node && typeof ResizeObserver !== \"undefined\") {\n        observerRef.current = new ResizeObserver(updateWidth);\n        observerRef.current.observe(node);\n      }\n    },\n    [breakpoints2]\n  );\n  return { containerRef, containerWidth };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, arg) {\n  return typeof value === \"function\" ? value(arg) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : void 0;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === void 0 ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions({\n  layout,\n  onClick,\n  containerWidth,\n  targetRowHeight,\n  rowConstraints,\n  columns,\n  spacing,\n  padding,\n  sizes\n}) {\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n      (w) => w / 5,\n      (w) => w / 4,\n      (w) => w / 3,\n      (w) => w / 2\n    ]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(props, containerWidth, layoutOptions) {\n  const { photos, componentsProps: componentsPropsProp } = props;\n  const componentsProps = unwrap(componentsPropsProp, containerWidth) || {};\n  if (layoutOptions) {\n    const { layout, spacing, padding, rowConstraints } = layoutOptions;\n    if (layout === \"rows\") {\n      const { singleRowMaxHeight } = rowConstraints || {};\n      if (singleRowMaxHeight) {\n        const maxWidth = Math.floor(\n          photos.reduce(\n            (acc, { width, height }) => acc + width / height * singleRowMaxHeight - 2 * padding,\n            padding * photos.length * 2 + spacing * (photos.length - 1)\n          )\n        );\n        if (maxWidth > 0) {\n          componentsProps.containerProps = componentsProps.containerProps || {};\n          componentsProps.containerProps.style = { maxWidth, ...componentsProps.containerProps.style };\n        }\n      }\n    }\n  }\n  return componentsProps;\n}\nfunction renderLayout(props, componentsProps, layoutOptions) {\n  const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n  const commonLayoutProps = { photos, renderPhoto, componentsProps };\n  if (layout === \"rows\") {\n    return React.createElement(\n      RowsLayout,\n      {\n        layoutOptions,\n        renderRowContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  if (layout === \"columns\") {\n    return React.createElement(\n      ColumnsLayout,\n      {\n        layoutOptions,\n        renderColumnContainer,\n        ...commonLayoutProps\n      }\n    );\n  }\n  return React.createElement(\n    MasonryLayout,\n    {\n      layoutOptions,\n      renderColumnContainer,\n      ...commonLayoutProps\n    }\n  );\n}\nfunction PhotoAlbum(props) {\n  const { photos, layout, renderContainer, defaultContainerWidth, breakpoints: breakpoints2 } = props;\n  const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints2), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n    return null;\n  const layoutOptions = containerWidth ? resolveLayoutOptions({ containerWidth, ...props }) : void 0;\n  const componentsProps = resolveComponentsProps(props, containerWidth, layoutOptions);\n  return React.createElement(\n    ContainerRenderer,\n    {\n      layout,\n      containerRef,\n      renderContainer,\n      containerProps: componentsProps.containerProps\n    },\n    layoutOptions && renderLayout(props, componentsProps, layoutOptions)\n  );\n}\nexport {\n  PhotoAlbum,\n  PhotoAlbum as default\n};\n"],"names":["_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","ratio","_ref","width","height","round","value","decimals","arguments","length","undefined","factor","Math","pow","Number","EPSILON","MinHeap","comparator","_classCallCheck","this","heap","n","_createClass","key","i","j","temp","k","k2","floor","greater","swap","element","swim","max","pop","sink","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","rank","queue","el","weight","a","b","push","id","_loop","_queue$pop","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","size","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","spacing","padding","reduce","acc","photo","cost","photos","targetRowHeight","slice","commonHeight","computeRowsLayout","_ref4","layoutOptions","rowConstraints","limitNodeSearch","_ref2","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_ref3","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","layout","_loop2","map","index","_ref5","_ref6","photoIndex","photosCount","clsx","_len","classes","Array","_key","concat","filter","cls","Boolean","join","calcWidth","base","_ref7","_ref8","gaps","cssPhotoWidth","calculateSizesValue","match","PhotoRenderer","props","_ref11","_props$imageProps","imageProps","_props$imageProps2","style","className","restImageProps","_objectWithoutProperties","renderPhoto","onClick","imageStyle","_objectSpread","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","src","alt","title","loading","decoding","srcSet","sizes","images","find","_ref9","sort","first","second","image","_ref10","viewport","ceil","srcSetAndSizes","renderDefaultPhoto","options","unwrappedStyle","rest","React","wrapped","wrapperStyle","defaultRenderRowContainer","_ref12","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","_props$rowContainerPr","_props$rowContainerPr2","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","_props$componentsProp","componentsProps","rowsLayout","_ref13","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","_loop3","currentQueue","_toConsumableArray","keys","clear","accumulatedWeight","_ref14","paths","nextPath","computeShortestPath","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","_loop4","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","targetColumnWidth","columns","averageRatio","from","_","targetColumnHeight","_ref15","cutOffHeight","makeGetColumnNeighbors","computeLayout","_computeColumnsModel","findIndex","columnModel","_ref19","_ref19$layout","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ratio2","ColumnContainerRenderer","renderColumnContainer","_props$columnContaine","_props$columnContaine2","restColumnContainerProps","ColumnsLayout","_props$componentsProp2","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","_props$componentsProp3","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","_props$containerProps","_props$containerProps2","restContainerProps","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints2","clientWidth","sorted","x","threshold","breakpoint","breakpoints","Object","freeze","unwrap","arg","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","PhotoAlbum","defaultContainerWidth","_useContainerWidth","_React$useReducer","_React$useReducer2","_slicedToArray","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","_ref27","w","resolveLayoutOptions","singleRowMaxHeight","maxWidth","_ref29","resolveComponentsProps","commonLayoutProps","renderLayout"],"sourceRoot":""}